// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// GetStackObjectExecutionReader is a Reader for the GetStackObjectExecution structure.
type GetStackObjectExecutionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStackObjectExecutionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStackObjectExecutionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStackObjectExecutionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetStackObjectExecutionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStackObjectExecutionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetStackObjectExecutionOK creates a GetStackObjectExecutionOK with default headers values
func NewGetStackObjectExecutionOK() *GetStackObjectExecutionOK {
	return &GetStackObjectExecutionOK{}
}

/*GetStackObjectExecutionOK handles this case with default header values.

A successful response.
*/
type GetStackObjectExecutionOK struct {
	Payload *models.StorageStackObjectExecutionReply
}

func (o *GetStackObjectExecutionOK) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/executions/{id}][%d] getStackObjectExecutionOK  %+v", 200, o.Payload)
}

func (o *GetStackObjectExecutionOK) GetPayload() *models.StorageStackObjectExecutionReply {
	return o.Payload
}

func (o *GetStackObjectExecutionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageStackObjectExecutionReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackObjectExecutionBadRequest creates a GetStackObjectExecutionBadRequest with default headers values
func NewGetStackObjectExecutionBadRequest() *GetStackObjectExecutionBadRequest {
	return &GetStackObjectExecutionBadRequest{}
}

/*GetStackObjectExecutionBadRequest handles this case with default header values.

Validation error
*/
type GetStackObjectExecutionBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *GetStackObjectExecutionBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/executions/{id}][%d] getStackObjectExecutionBadRequest  %+v", 400, o.Payload)
}

func (o *GetStackObjectExecutionBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *GetStackObjectExecutionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackObjectExecutionForbidden creates a GetStackObjectExecutionForbidden with default headers values
func NewGetStackObjectExecutionForbidden() *GetStackObjectExecutionForbidden {
	return &GetStackObjectExecutionForbidden{}
}

/*GetStackObjectExecutionForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type GetStackObjectExecutionForbidden struct {
	Payload *models.CommonError
}

func (o *GetStackObjectExecutionForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/executions/{id}][%d] getStackObjectExecutionForbidden  %+v", 403, o.Payload)
}

func (o *GetStackObjectExecutionForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *GetStackObjectExecutionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackObjectExecutionNotFound creates a GetStackObjectExecutionNotFound with default headers values
func NewGetStackObjectExecutionNotFound() *GetStackObjectExecutionNotFound {
	return &GetStackObjectExecutionNotFound{}
}

/*GetStackObjectExecutionNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type GetStackObjectExecutionNotFound struct {
	Payload *models.CommonError
}

func (o *GetStackObjectExecutionNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/executions/{id}][%d] getStackObjectExecutionNotFound  %+v", 404, o.Payload)
}

func (o *GetStackObjectExecutionNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *GetStackObjectExecutionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
