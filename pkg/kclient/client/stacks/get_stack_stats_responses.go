// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// GetStackStatsReader is a Reader for the GetStackStats structure.
type GetStackStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStackStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStackStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStackStatsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetStackStatsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStackStatsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetStackStatsOK creates a GetStackStatsOK with default headers values
func NewGetStackStatsOK() *GetStackStatsOK {
	return &GetStackStatsOK{}
}

/*GetStackStatsOK handles this case with default header values.

A successful response.
*/
type GetStackStatsOK struct {
	Payload models.StorageStackStatsReply
}

func (o *GetStackStatsOK) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{id}/stats][%d] getStackStatsOK  %+v", 200, o.Payload)
}

func (o *GetStackStatsOK) GetPayload() models.StorageStackStatsReply {
	return o.Payload
}

func (o *GetStackStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackStatsBadRequest creates a GetStackStatsBadRequest with default headers values
func NewGetStackStatsBadRequest() *GetStackStatsBadRequest {
	return &GetStackStatsBadRequest{}
}

/*GetStackStatsBadRequest handles this case with default header values.

Validation error
*/
type GetStackStatsBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *GetStackStatsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{id}/stats][%d] getStackStatsBadRequest  %+v", 400, o.Payload)
}

func (o *GetStackStatsBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *GetStackStatsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackStatsForbidden creates a GetStackStatsForbidden with default headers values
func NewGetStackStatsForbidden() *GetStackStatsForbidden {
	return &GetStackStatsForbidden{}
}

/*GetStackStatsForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type GetStackStatsForbidden struct {
	Payload *models.CommonError
}

func (o *GetStackStatsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{id}/stats][%d] getStackStatsForbidden  %+v", 403, o.Payload)
}

func (o *GetStackStatsForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *GetStackStatsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackStatsNotFound creates a GetStackStatsNotFound with default headers values
func NewGetStackStatsNotFound() *GetStackStatsNotFound {
	return &GetStackStatsNotFound{}
}

/*GetStackStatsNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type GetStackStatsNotFound struct {
	Payload *models.CommonError
}

func (o *GetStackStatsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{id}/stats][%d] getStackStatsNotFound  %+v", 404, o.Payload)
}

func (o *GetStackStatsNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *GetStackStatsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
