// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	httptransport "github.com/go-openapi/runtime/client"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/client/activity"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/catalog"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/credentials"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/functions"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/hooks"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/invite"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/logs"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/organization"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/profile"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/s3_credentials"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/secrets"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/session"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/stack"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/storage_metrics"
	"github.com/koyeb/koyeb-cli/pkg/kclient/client/store"
)

// Default account account proto HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new account account proto HTTP client.
func NewHTTPClient(formats strfmt.Registry) *AccountAccountProto {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new account account proto HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *AccountAccountProto {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new account account proto client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *AccountAccountProto {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(AccountAccountProto)
	cli.Transport = transport
	cli.Activity = activity.New(transport, formats)
	cli.Catalog = catalog.New(transport, formats)
	cli.Credentials = credentials.New(transport, formats)
	cli.Functions = functions.New(transport, formats)
	cli.Hooks = hooks.New(transport, formats)
	cli.Invite = invite.New(transport, formats)
	cli.Logs = logs.New(transport, formats)
	cli.Organization = organization.New(transport, formats)
	cli.Profile = profile.New(transport, formats)
	cli.S3Credentials = s3_credentials.New(transport, formats)
	cli.Secrets = secrets.New(transport, formats)
	cli.Session = session.New(transport, formats)
	cli.Stack = stack.New(transport, formats)
	cli.StorageMetrics = storage_metrics.New(transport, formats)
	cli.Store = store.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// AccountAccountProto is a client for account account proto
type AccountAccountProto struct {
	Activity activity.ClientService

	Catalog catalog.ClientService

	Credentials credentials.ClientService

	Functions functions.ClientService

	Hooks hooks.ClientService

	Invite invite.ClientService

	Logs logs.ClientService

	Organization organization.ClientService

	Profile profile.ClientService

	S3Credentials s3_credentials.ClientService

	Secrets secrets.ClientService

	Session session.ClientService

	Stack stack.ClientService

	StorageMetrics storage_metrics.ClientService

	Store store.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *AccountAccountProto) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Activity.SetTransport(transport)
	c.Catalog.SetTransport(transport)
	c.Credentials.SetTransport(transport)
	c.Functions.SetTransport(transport)
	c.Hooks.SetTransport(transport)
	c.Invite.SetTransport(transport)
	c.Logs.SetTransport(transport)
	c.Organization.SetTransport(transport)
	c.Profile.SetTransport(transport)
	c.S3Credentials.SetTransport(transport)
	c.Secrets.SetTransport(transport)
	c.Session.SetTransport(transport)
	c.Stack.SetTransport(transport)
	c.StorageMetrics.SetTransport(transport)
	c.Store.SetTransport(transport)
}
