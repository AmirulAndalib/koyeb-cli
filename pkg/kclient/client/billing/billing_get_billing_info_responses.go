// Code generated by go-swagger; DO NOT EDIT.

package billing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// BillingGetBillingInfoReader is a Reader for the BillingGetBillingInfo structure.
type BillingGetBillingInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BillingGetBillingInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBillingGetBillingInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBillingGetBillingInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBillingGetBillingInfoForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBillingGetBillingInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewBillingGetBillingInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewBillingGetBillingInfoOK creates a BillingGetBillingInfoOK with default headers values
func NewBillingGetBillingInfoOK() *BillingGetBillingInfoOK {
	return &BillingGetBillingInfoOK{}
}

/*BillingGetBillingInfoOK handles this case with default header values.

A successful response.
*/
type BillingGetBillingInfoOK struct {
	Payload *models.AccountBillingInfoReply
}

func (o *BillingGetBillingInfoOK) Error() string {
	return fmt.Sprintf("[GET /v1/account/billing][%d] billingGetBillingInfoOK  %+v", 200, o.Payload)
}

func (o *BillingGetBillingInfoOK) GetPayload() *models.AccountBillingInfoReply {
	return o.Payload
}

func (o *BillingGetBillingInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountBillingInfoReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBillingGetBillingInfoBadRequest creates a BillingGetBillingInfoBadRequest with default headers values
func NewBillingGetBillingInfoBadRequest() *BillingGetBillingInfoBadRequest {
	return &BillingGetBillingInfoBadRequest{}
}

/*BillingGetBillingInfoBadRequest handles this case with default header values.

Validation error
*/
type BillingGetBillingInfoBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *BillingGetBillingInfoBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/account/billing][%d] billingGetBillingInfoBadRequest  %+v", 400, o.Payload)
}

func (o *BillingGetBillingInfoBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *BillingGetBillingInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBillingGetBillingInfoForbidden creates a BillingGetBillingInfoForbidden with default headers values
func NewBillingGetBillingInfoForbidden() *BillingGetBillingInfoForbidden {
	return &BillingGetBillingInfoForbidden{}
}

/*BillingGetBillingInfoForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type BillingGetBillingInfoForbidden struct {
	Payload *models.CommonError
}

func (o *BillingGetBillingInfoForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/account/billing][%d] billingGetBillingInfoForbidden  %+v", 403, o.Payload)
}

func (o *BillingGetBillingInfoForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *BillingGetBillingInfoForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBillingGetBillingInfoNotFound creates a BillingGetBillingInfoNotFound with default headers values
func NewBillingGetBillingInfoNotFound() *BillingGetBillingInfoNotFound {
	return &BillingGetBillingInfoNotFound{}
}

/*BillingGetBillingInfoNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type BillingGetBillingInfoNotFound struct {
	Payload *models.CommonError
}

func (o *BillingGetBillingInfoNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/account/billing][%d] billingGetBillingInfoNotFound  %+v", 404, o.Payload)
}

func (o *BillingGetBillingInfoNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *BillingGetBillingInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBillingGetBillingInfoDefault creates a BillingGetBillingInfoDefault with default headers values
func NewBillingGetBillingInfoDefault(code int) *BillingGetBillingInfoDefault {
	return &BillingGetBillingInfoDefault{
		_statusCode: code,
	}
}

/*BillingGetBillingInfoDefault handles this case with default header values.

An unexpected error response
*/
type BillingGetBillingInfoDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the billing get billing info default response
func (o *BillingGetBillingInfoDefault) Code() int {
	return o._statusCode
}

func (o *BillingGetBillingInfoDefault) Error() string {
	return fmt.Sprintf("[GET /v1/account/billing][%d] billing_GetBillingInfo default  %+v", o._statusCode, o.Payload)
}

func (o *BillingGetBillingInfoDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *BillingGetBillingInfoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
