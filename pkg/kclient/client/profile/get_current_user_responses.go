// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// GetCurrentUserReader is a Reader for the GetCurrentUser structure.
type GetCurrentUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCurrentUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCurrentUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCurrentUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCurrentUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCurrentUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCurrentUserOK creates a GetCurrentUserOK with default headers values
func NewGetCurrentUserOK() *GetCurrentUserOK {
	return &GetCurrentUserOK{}
}

/*GetCurrentUserOK handles this case with default header values.

A successful response.
*/
type GetCurrentUserOK struct {
	Payload *models.AccountUserReply
}

func (o *GetCurrentUserOK) Error() string {
	return fmt.Sprintf("[GET /v1/account/profile][%d] getCurrentUserOK  %+v", 200, o.Payload)
}

func (o *GetCurrentUserOK) GetPayload() *models.AccountUserReply {
	return o.Payload
}

func (o *GetCurrentUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountUserReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCurrentUserBadRequest creates a GetCurrentUserBadRequest with default headers values
func NewGetCurrentUserBadRequest() *GetCurrentUserBadRequest {
	return &GetCurrentUserBadRequest{}
}

/*GetCurrentUserBadRequest handles this case with default header values.

Validation error
*/
type GetCurrentUserBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *GetCurrentUserBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/account/profile][%d] getCurrentUserBadRequest  %+v", 400, o.Payload)
}

func (o *GetCurrentUserBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *GetCurrentUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCurrentUserForbidden creates a GetCurrentUserForbidden with default headers values
func NewGetCurrentUserForbidden() *GetCurrentUserForbidden {
	return &GetCurrentUserForbidden{}
}

/*GetCurrentUserForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type GetCurrentUserForbidden struct {
	Payload *models.CommonError
}

func (o *GetCurrentUserForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/account/profile][%d] getCurrentUserForbidden  %+v", 403, o.Payload)
}

func (o *GetCurrentUserForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *GetCurrentUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCurrentUserNotFound creates a GetCurrentUserNotFound with default headers values
func NewGetCurrentUserNotFound() *GetCurrentUserNotFound {
	return &GetCurrentUserNotFound{}
}

/*GetCurrentUserNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type GetCurrentUserNotFound struct {
	Payload *models.CommonError
}

func (o *GetCurrentUserNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/account/profile][%d] getCurrentUserNotFound  %+v", 404, o.Payload)
}

func (o *GetCurrentUserNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *GetCurrentUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
