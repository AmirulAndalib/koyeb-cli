// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// ProfileGetOAuthOptionsReader is a Reader for the ProfileGetOAuthOptions structure.
type ProfileGetOAuthOptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProfileGetOAuthOptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProfileGetOAuthOptionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProfileGetOAuthOptionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProfileGetOAuthOptionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProfileGetOAuthOptionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProfileGetOAuthOptionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProfileGetOAuthOptionsOK creates a ProfileGetOAuthOptionsOK with default headers values
func NewProfileGetOAuthOptionsOK() *ProfileGetOAuthOptionsOK {
	return &ProfileGetOAuthOptionsOK{}
}

/*ProfileGetOAuthOptionsOK handles this case with default header values.

A successful response.
*/
type ProfileGetOAuthOptionsOK struct {
	Payload *models.AccountGetOAuthOptionsReply
}

func (o *ProfileGetOAuthOptionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/account/oauth][%d] profileGetOAuthOptionsOK  %+v", 200, o.Payload)
}

func (o *ProfileGetOAuthOptionsOK) GetPayload() *models.AccountGetOAuthOptionsReply {
	return o.Payload
}

func (o *ProfileGetOAuthOptionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountGetOAuthOptionsReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileGetOAuthOptionsBadRequest creates a ProfileGetOAuthOptionsBadRequest with default headers values
func NewProfileGetOAuthOptionsBadRequest() *ProfileGetOAuthOptionsBadRequest {
	return &ProfileGetOAuthOptionsBadRequest{}
}

/*ProfileGetOAuthOptionsBadRequest handles this case with default header values.

Validation error
*/
type ProfileGetOAuthOptionsBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *ProfileGetOAuthOptionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/account/oauth][%d] profileGetOAuthOptionsBadRequest  %+v", 400, o.Payload)
}

func (o *ProfileGetOAuthOptionsBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *ProfileGetOAuthOptionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileGetOAuthOptionsForbidden creates a ProfileGetOAuthOptionsForbidden with default headers values
func NewProfileGetOAuthOptionsForbidden() *ProfileGetOAuthOptionsForbidden {
	return &ProfileGetOAuthOptionsForbidden{}
}

/*ProfileGetOAuthOptionsForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type ProfileGetOAuthOptionsForbidden struct {
	Payload *models.CommonError
}

func (o *ProfileGetOAuthOptionsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/account/oauth][%d] profileGetOAuthOptionsForbidden  %+v", 403, o.Payload)
}

func (o *ProfileGetOAuthOptionsForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ProfileGetOAuthOptionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileGetOAuthOptionsNotFound creates a ProfileGetOAuthOptionsNotFound with default headers values
func NewProfileGetOAuthOptionsNotFound() *ProfileGetOAuthOptionsNotFound {
	return &ProfileGetOAuthOptionsNotFound{}
}

/*ProfileGetOAuthOptionsNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type ProfileGetOAuthOptionsNotFound struct {
	Payload *models.CommonError
}

func (o *ProfileGetOAuthOptionsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/account/oauth][%d] profileGetOAuthOptionsNotFound  %+v", 404, o.Payload)
}

func (o *ProfileGetOAuthOptionsNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ProfileGetOAuthOptionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileGetOAuthOptionsDefault creates a ProfileGetOAuthOptionsDefault with default headers values
func NewProfileGetOAuthOptionsDefault(code int) *ProfileGetOAuthOptionsDefault {
	return &ProfileGetOAuthOptionsDefault{
		_statusCode: code,
	}
}

/*ProfileGetOAuthOptionsDefault handles this case with default header values.

An unexpected error response
*/
type ProfileGetOAuthOptionsDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the profile get o auth options default response
func (o *ProfileGetOAuthOptionsDefault) Code() int {
	return o._statusCode
}

func (o *ProfileGetOAuthOptionsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/account/oauth][%d] profile_GetOAuthOptions default  %+v", o._statusCode, o.Payload)
}

func (o *ProfileGetOAuthOptionsDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *ProfileGetOAuthOptionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
