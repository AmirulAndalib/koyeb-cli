// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// ProfileUpdatePasswordReader is a Reader for the ProfileUpdatePassword structure.
type ProfileUpdatePasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProfileUpdatePasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProfileUpdatePasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProfileUpdatePasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProfileUpdatePasswordForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProfileUpdatePasswordNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProfileUpdatePasswordDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProfileUpdatePasswordOK creates a ProfileUpdatePasswordOK with default headers values
func NewProfileUpdatePasswordOK() *ProfileUpdatePasswordOK {
	return &ProfileUpdatePasswordOK{}
}

/*ProfileUpdatePasswordOK handles this case with default header values.

A successful response.
*/
type ProfileUpdatePasswordOK struct {
	Payload *models.AccountLoginReply
}

func (o *ProfileUpdatePasswordOK) Error() string {
	return fmt.Sprintf("[POST /v1/account/update_password][%d] profileUpdatePasswordOK  %+v", 200, o.Payload)
}

func (o *ProfileUpdatePasswordOK) GetPayload() *models.AccountLoginReply {
	return o.Payload
}

func (o *ProfileUpdatePasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountLoginReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileUpdatePasswordBadRequest creates a ProfileUpdatePasswordBadRequest with default headers values
func NewProfileUpdatePasswordBadRequest() *ProfileUpdatePasswordBadRequest {
	return &ProfileUpdatePasswordBadRequest{}
}

/*ProfileUpdatePasswordBadRequest handles this case with default header values.

Validation error
*/
type ProfileUpdatePasswordBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *ProfileUpdatePasswordBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/account/update_password][%d] profileUpdatePasswordBadRequest  %+v", 400, o.Payload)
}

func (o *ProfileUpdatePasswordBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *ProfileUpdatePasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileUpdatePasswordForbidden creates a ProfileUpdatePasswordForbidden with default headers values
func NewProfileUpdatePasswordForbidden() *ProfileUpdatePasswordForbidden {
	return &ProfileUpdatePasswordForbidden{}
}

/*ProfileUpdatePasswordForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type ProfileUpdatePasswordForbidden struct {
	Payload *models.CommonError
}

func (o *ProfileUpdatePasswordForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/account/update_password][%d] profileUpdatePasswordForbidden  %+v", 403, o.Payload)
}

func (o *ProfileUpdatePasswordForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ProfileUpdatePasswordForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileUpdatePasswordNotFound creates a ProfileUpdatePasswordNotFound with default headers values
func NewProfileUpdatePasswordNotFound() *ProfileUpdatePasswordNotFound {
	return &ProfileUpdatePasswordNotFound{}
}

/*ProfileUpdatePasswordNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type ProfileUpdatePasswordNotFound struct {
	Payload *models.CommonError
}

func (o *ProfileUpdatePasswordNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/account/update_password][%d] profileUpdatePasswordNotFound  %+v", 404, o.Payload)
}

func (o *ProfileUpdatePasswordNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ProfileUpdatePasswordNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileUpdatePasswordDefault creates a ProfileUpdatePasswordDefault with default headers values
func NewProfileUpdatePasswordDefault(code int) *ProfileUpdatePasswordDefault {
	return &ProfileUpdatePasswordDefault{
		_statusCode: code,
	}
}

/*ProfileUpdatePasswordDefault handles this case with default header values.

An unexpected error response
*/
type ProfileUpdatePasswordDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the profile update password default response
func (o *ProfileUpdatePasswordDefault) Code() int {
	return o._statusCode
}

func (o *ProfileUpdatePasswordDefault) Error() string {
	return fmt.Sprintf("[POST /v1/account/update_password][%d] profile_UpdatePassword default  %+v", o._statusCode, o.Payload)
}

func (o *ProfileUpdatePasswordDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *ProfileUpdatePasswordDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
