// Code generated by go-swagger; DO NOT EDIT.

package deliveries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// DeleteDeliveryReader is a Reader for the DeleteDelivery structure.
type DeleteDeliveryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDeliveryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDeliveryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteDeliveryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteDeliveryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDeliveryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDeliveryOK creates a DeleteDeliveryOK with default headers values
func NewDeleteDeliveryOK() *DeleteDeliveryOK {
	return &DeleteDeliveryOK{}
}

/*DeleteDeliveryOK handles this case with default header values.

A successful response.
*/
type DeleteDeliveryOK struct {
	Payload models.CommonEmpty
}

func (o *DeleteDeliveryOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/deliveries/{id}][%d] deleteDeliveryOK  %+v", 200, o.Payload)
}

func (o *DeleteDeliveryOK) GetPayload() models.CommonEmpty {
	return o.Payload
}

func (o *DeleteDeliveryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDeliveryBadRequest creates a DeleteDeliveryBadRequest with default headers values
func NewDeleteDeliveryBadRequest() *DeleteDeliveryBadRequest {
	return &DeleteDeliveryBadRequest{}
}

/*DeleteDeliveryBadRequest handles this case with default header values.

Validation error
*/
type DeleteDeliveryBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *DeleteDeliveryBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/deliveries/{id}][%d] deleteDeliveryBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteDeliveryBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *DeleteDeliveryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDeliveryForbidden creates a DeleteDeliveryForbidden with default headers values
func NewDeleteDeliveryForbidden() *DeleteDeliveryForbidden {
	return &DeleteDeliveryForbidden{}
}

/*DeleteDeliveryForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type DeleteDeliveryForbidden struct {
	Payload *models.CommonError
}

func (o *DeleteDeliveryForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/deliveries/{id}][%d] deleteDeliveryForbidden  %+v", 403, o.Payload)
}

func (o *DeleteDeliveryForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *DeleteDeliveryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDeliveryNotFound creates a DeleteDeliveryNotFound with default headers values
func NewDeleteDeliveryNotFound() *DeleteDeliveryNotFound {
	return &DeleteDeliveryNotFound{}
}

/*DeleteDeliveryNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type DeleteDeliveryNotFound struct {
	Payload *models.CommonError
}

func (o *DeleteDeliveryNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/deliveries/{id}][%d] deleteDeliveryNotFound  %+v", 404, o.Payload)
}

func (o *DeleteDeliveryNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *DeleteDeliveryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
