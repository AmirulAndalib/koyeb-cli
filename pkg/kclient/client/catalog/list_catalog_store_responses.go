// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// ListCatalogStoreReader is a Reader for the ListCatalogStore structure.
type ListCatalogStoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListCatalogStoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListCatalogStoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListCatalogStoreBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListCatalogStoreForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListCatalogStoreNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListCatalogStoreOK creates a ListCatalogStoreOK with default headers values
func NewListCatalogStoreOK() *ListCatalogStoreOK {
	return &ListCatalogStoreOK{}
}

/*ListCatalogStoreOK handles this case with default header values.

A successful response.
*/
type ListCatalogStoreOK struct {
	Payload *models.StorageListCatalogStoreReply
}

func (o *ListCatalogStoreOK) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stores][%d] listCatalogStoreOK  %+v", 200, o.Payload)
}

func (o *ListCatalogStoreOK) GetPayload() *models.StorageListCatalogStoreReply {
	return o.Payload
}

func (o *ListCatalogStoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageListCatalogStoreReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCatalogStoreBadRequest creates a ListCatalogStoreBadRequest with default headers values
func NewListCatalogStoreBadRequest() *ListCatalogStoreBadRequest {
	return &ListCatalogStoreBadRequest{}
}

/*ListCatalogStoreBadRequest handles this case with default header values.

Validation error
*/
type ListCatalogStoreBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *ListCatalogStoreBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stores][%d] listCatalogStoreBadRequest  %+v", 400, o.Payload)
}

func (o *ListCatalogStoreBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *ListCatalogStoreBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCatalogStoreForbidden creates a ListCatalogStoreForbidden with default headers values
func NewListCatalogStoreForbidden() *ListCatalogStoreForbidden {
	return &ListCatalogStoreForbidden{}
}

/*ListCatalogStoreForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type ListCatalogStoreForbidden struct {
	Payload *models.CommonError
}

func (o *ListCatalogStoreForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stores][%d] listCatalogStoreForbidden  %+v", 403, o.Payload)
}

func (o *ListCatalogStoreForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ListCatalogStoreForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCatalogStoreNotFound creates a ListCatalogStoreNotFound with default headers values
func NewListCatalogStoreNotFound() *ListCatalogStoreNotFound {
	return &ListCatalogStoreNotFound{}
}

/*ListCatalogStoreNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type ListCatalogStoreNotFound struct {
	Payload *models.CommonError
}

func (o *ListCatalogStoreNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stores][%d] listCatalogStoreNotFound  %+v", 404, o.Payload)
}

func (o *ListCatalogStoreNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ListCatalogStoreNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
