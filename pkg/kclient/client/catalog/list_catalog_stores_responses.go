// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// ListCatalogStoresReader is a Reader for the ListCatalogStores structure.
type ListCatalogStoresReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListCatalogStoresReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListCatalogStoresOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListCatalogStoresBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListCatalogStoresForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListCatalogStoresNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListCatalogStoresOK creates a ListCatalogStoresOK with default headers values
func NewListCatalogStoresOK() *ListCatalogStoresOK {
	return &ListCatalogStoresOK{}
}

/*ListCatalogStoresOK handles this case with default header values.

A successful response.
*/
type ListCatalogStoresOK struct {
	Payload *models.StorageListCatalogStoresReply
}

func (o *ListCatalogStoresOK) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stores][%d] listCatalogStoresOK  %+v", 200, o.Payload)
}

func (o *ListCatalogStoresOK) GetPayload() *models.StorageListCatalogStoresReply {
	return o.Payload
}

func (o *ListCatalogStoresOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageListCatalogStoresReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCatalogStoresBadRequest creates a ListCatalogStoresBadRequest with default headers values
func NewListCatalogStoresBadRequest() *ListCatalogStoresBadRequest {
	return &ListCatalogStoresBadRequest{}
}

/*ListCatalogStoresBadRequest handles this case with default header values.

Validation error
*/
type ListCatalogStoresBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *ListCatalogStoresBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stores][%d] listCatalogStoresBadRequest  %+v", 400, o.Payload)
}

func (o *ListCatalogStoresBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *ListCatalogStoresBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCatalogStoresForbidden creates a ListCatalogStoresForbidden with default headers values
func NewListCatalogStoresForbidden() *ListCatalogStoresForbidden {
	return &ListCatalogStoresForbidden{}
}

/*ListCatalogStoresForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type ListCatalogStoresForbidden struct {
	Payload *models.CommonError
}

func (o *ListCatalogStoresForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stores][%d] listCatalogStoresForbidden  %+v", 403, o.Payload)
}

func (o *ListCatalogStoresForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ListCatalogStoresForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCatalogStoresNotFound creates a ListCatalogStoresNotFound with default headers values
func NewListCatalogStoresNotFound() *ListCatalogStoresNotFound {
	return &ListCatalogStoresNotFound{}
}

/*ListCatalogStoresNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type ListCatalogStoresNotFound struct {
	Payload *models.CommonError
}

func (o *ListCatalogStoresNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stores][%d] listCatalogStoresNotFound  %+v", 404, o.Payload)
}

func (o *ListCatalogStoresNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ListCatalogStoresNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
