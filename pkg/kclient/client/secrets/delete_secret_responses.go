// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// DeleteSecretReader is a Reader for the DeleteSecret structure.
type DeleteSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSecretOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSecretOK creates a DeleteSecretOK with default headers values
func NewDeleteSecretOK() *DeleteSecretOK {
	return &DeleteSecretOK{}
}

/*DeleteSecretOK handles this case with default header values.

A successful response.
*/
type DeleteSecretOK struct {
	Payload models.CommonEmpty
}

func (o *DeleteSecretOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/secrets/{id}][%d] deleteSecretOK  %+v", 200, o.Payload)
}

func (o *DeleteSecretOK) GetPayload() models.CommonEmpty {
	return o.Payload
}

func (o *DeleteSecretOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSecretBadRequest creates a DeleteSecretBadRequest with default headers values
func NewDeleteSecretBadRequest() *DeleteSecretBadRequest {
	return &DeleteSecretBadRequest{}
}

/*DeleteSecretBadRequest handles this case with default header values.

Validation error
*/
type DeleteSecretBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *DeleteSecretBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/secrets/{id}][%d] deleteSecretBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSecretBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *DeleteSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSecretForbidden creates a DeleteSecretForbidden with default headers values
func NewDeleteSecretForbidden() *DeleteSecretForbidden {
	return &DeleteSecretForbidden{}
}

/*DeleteSecretForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type DeleteSecretForbidden struct {
	Payload *models.CommonError
}

func (o *DeleteSecretForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/secrets/{id}][%d] deleteSecretForbidden  %+v", 403, o.Payload)
}

func (o *DeleteSecretForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *DeleteSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSecretNotFound creates a DeleteSecretNotFound with default headers values
func NewDeleteSecretNotFound() *DeleteSecretNotFound {
	return &DeleteSecretNotFound{}
}

/*DeleteSecretNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type DeleteSecretNotFound struct {
	Payload *models.CommonError
}

func (o *DeleteSecretNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/secrets/{id}][%d] deleteSecretNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSecretNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *DeleteSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
