// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// ListSecretsReader is a Reader for the ListSecrets structure.
type ListSecretsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSecretsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListSecretsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListSecretsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListSecretsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListSecretsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListSecretsOK creates a ListSecretsOK with default headers values
func NewListSecretsOK() *ListSecretsOK {
	return &ListSecretsOK{}
}

/*ListSecretsOK handles this case with default header values.

A successful response.
*/
type ListSecretsOK struct {
	Payload *models.StorageListSecretsReply
}

func (o *ListSecretsOK) Error() string {
	return fmt.Sprintf("[GET /v1/secrets][%d] listSecretsOK  %+v", 200, o.Payload)
}

func (o *ListSecretsOK) GetPayload() *models.StorageListSecretsReply {
	return o.Payload
}

func (o *ListSecretsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageListSecretsReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSecretsBadRequest creates a ListSecretsBadRequest with default headers values
func NewListSecretsBadRequest() *ListSecretsBadRequest {
	return &ListSecretsBadRequest{}
}

/*ListSecretsBadRequest handles this case with default header values.

Validation error
*/
type ListSecretsBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *ListSecretsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/secrets][%d] listSecretsBadRequest  %+v", 400, o.Payload)
}

func (o *ListSecretsBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *ListSecretsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSecretsForbidden creates a ListSecretsForbidden with default headers values
func NewListSecretsForbidden() *ListSecretsForbidden {
	return &ListSecretsForbidden{}
}

/*ListSecretsForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type ListSecretsForbidden struct {
	Payload *models.CommonError
}

func (o *ListSecretsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/secrets][%d] listSecretsForbidden  %+v", 403, o.Payload)
}

func (o *ListSecretsForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ListSecretsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSecretsNotFound creates a ListSecretsNotFound with default headers values
func NewListSecretsNotFound() *ListSecretsNotFound {
	return &ListSecretsNotFound{}
}

/*ListSecretsNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type ListSecretsNotFound struct {
	Payload *models.CommonError
}

func (o *ListSecretsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/secrets][%d] listSecretsNotFound  %+v", 404, o.Payload)
}

func (o *ListSecretsNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ListSecretsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
