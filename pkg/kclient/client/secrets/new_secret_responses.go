// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// NewSecretReader is a Reader for the NewSecret structure.
type NewSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NewSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNewSecretOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNewSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNewSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNewSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNewSecretOK creates a NewSecretOK with default headers values
func NewNewSecretOK() *NewSecretOK {
	return &NewSecretOK{}
}

/*NewSecretOK handles this case with default header values.

A successful response.
*/
type NewSecretOK struct {
	Payload *models.StorageSecretReply
}

func (o *NewSecretOK) Error() string {
	return fmt.Sprintf("[POST /v1/secrets][%d] newSecretOK  %+v", 200, o.Payload)
}

func (o *NewSecretOK) GetPayload() *models.StorageSecretReply {
	return o.Payload
}

func (o *NewSecretOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageSecretReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNewSecretBadRequest creates a NewSecretBadRequest with default headers values
func NewNewSecretBadRequest() *NewSecretBadRequest {
	return &NewSecretBadRequest{}
}

/*NewSecretBadRequest handles this case with default header values.

Validation error
*/
type NewSecretBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *NewSecretBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/secrets][%d] newSecretBadRequest  %+v", 400, o.Payload)
}

func (o *NewSecretBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *NewSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNewSecretForbidden creates a NewSecretForbidden with default headers values
func NewNewSecretForbidden() *NewSecretForbidden {
	return &NewSecretForbidden{}
}

/*NewSecretForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type NewSecretForbidden struct {
	Payload *models.CommonError
}

func (o *NewSecretForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/secrets][%d] newSecretForbidden  %+v", 403, o.Payload)
}

func (o *NewSecretForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *NewSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNewSecretNotFound creates a NewSecretNotFound with default headers values
func NewNewSecretNotFound() *NewSecretNotFound {
	return &NewSecretNotFound{}
}

/*NewSecretNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type NewSecretNotFound struct {
	Payload *models.CommonError
}

func (o *NewSecretNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/secrets][%d] newSecretNotFound  %+v", 404, o.Payload)
}

func (o *NewSecretNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *NewSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
