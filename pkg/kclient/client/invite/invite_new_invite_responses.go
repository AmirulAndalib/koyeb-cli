// Code generated by go-swagger; DO NOT EDIT.

package invite

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/kclient/models"
)

// InviteNewInviteReader is a Reader for the InviteNewInvite structure.
type InviteNewInviteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InviteNewInviteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInviteNewInviteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInviteNewInviteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInviteNewInviteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInviteNewInviteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewInviteNewInviteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewInviteNewInviteOK creates a InviteNewInviteOK with default headers values
func NewInviteNewInviteOK() *InviteNewInviteOK {
	return &InviteNewInviteOK{}
}

/*InviteNewInviteOK handles this case with default header values.

A successful response.
*/
type InviteNewInviteOK struct {
	Payload models.CommonEmpty
}

func (o *InviteNewInviteOK) Error() string {
	return fmt.Sprintf("[POST /v1/account/invite][%d] inviteNewInviteOK  %+v", 200, o.Payload)
}

func (o *InviteNewInviteOK) GetPayload() models.CommonEmpty {
	return o.Payload
}

func (o *InviteNewInviteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteNewInviteBadRequest creates a InviteNewInviteBadRequest with default headers values
func NewInviteNewInviteBadRequest() *InviteNewInviteBadRequest {
	return &InviteNewInviteBadRequest{}
}

/*InviteNewInviteBadRequest handles this case with default header values.

Validation error
*/
type InviteNewInviteBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *InviteNewInviteBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/account/invite][%d] inviteNewInviteBadRequest  %+v", 400, o.Payload)
}

func (o *InviteNewInviteBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *InviteNewInviteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteNewInviteForbidden creates a InviteNewInviteForbidden with default headers values
func NewInviteNewInviteForbidden() *InviteNewInviteForbidden {
	return &InviteNewInviteForbidden{}
}

/*InviteNewInviteForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type InviteNewInviteForbidden struct {
	Payload *models.CommonError
}

func (o *InviteNewInviteForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/account/invite][%d] inviteNewInviteForbidden  %+v", 403, o.Payload)
}

func (o *InviteNewInviteForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *InviteNewInviteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteNewInviteNotFound creates a InviteNewInviteNotFound with default headers values
func NewInviteNewInviteNotFound() *InviteNewInviteNotFound {
	return &InviteNewInviteNotFound{}
}

/*InviteNewInviteNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type InviteNewInviteNotFound struct {
	Payload *models.CommonError
}

func (o *InviteNewInviteNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/account/invite][%d] inviteNewInviteNotFound  %+v", 404, o.Payload)
}

func (o *InviteNewInviteNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *InviteNewInviteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteNewInviteDefault creates a InviteNewInviteDefault with default headers values
func NewInviteNewInviteDefault(code int) *InviteNewInviteDefault {
	return &InviteNewInviteDefault{
		_statusCode: code,
	}
}

/*InviteNewInviteDefault handles this case with default header values.

An unexpected error response
*/
type InviteNewInviteDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the invite new invite default response
func (o *InviteNewInviteDefault) Code() int {
	return o._statusCode
}

func (o *InviteNewInviteDefault) Error() string {
	return fmt.Sprintf("[POST /v1/account/invite][%d] invite_NewInvite default  %+v", o._statusCode, o.Payload)
}

func (o *InviteNewInviteDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *InviteNewInviteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
