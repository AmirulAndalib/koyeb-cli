// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ParameterParameterType parameter parameter type
// swagger:model ParameterParameterType
type ParameterParameterType string

const (

	// ParameterParameterTypeSTRING captures enum value "STRING"
	ParameterParameterTypeSTRING ParameterParameterType = "STRING"

	// ParameterParameterTypeNUMBER captures enum value "NUMBER"
	ParameterParameterTypeNUMBER ParameterParameterType = "NUMBER"

	// ParameterParameterTypeBOOLEAN captures enum value "BOOLEAN"
	ParameterParameterTypeBOOLEAN ParameterParameterType = "BOOLEAN"

	// ParameterParameterTypeLIST captures enum value "LIST"
	ParameterParameterTypeLIST ParameterParameterType = "LIST"

	// ParameterParameterTypeSTRUCT captures enum value "STRUCT"
	ParameterParameterTypeSTRUCT ParameterParameterType = "STRUCT"
)

// for schema
var parameterParameterTypeEnum []interface{}

func init() {
	var res []ParameterParameterType
	if err := json.Unmarshal([]byte(`["STRING","NUMBER","BOOLEAN","LIST","STRUCT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		parameterParameterTypeEnum = append(parameterParameterTypeEnum, v)
	}
}

func (m ParameterParameterType) validateParameterParameterTypeEnum(path, location string, value ParameterParameterType) error {
	if err := validate.Enum(path, location, value, parameterParameterTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this parameter parameter type
func (m ParameterParameterType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateParameterParameterTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
