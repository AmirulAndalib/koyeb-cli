// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// StorageCatalogItemStatus storage catalog item status
// swagger:model storageCatalogItemStatus
type StorageCatalogItemStatus string

const (

	// StorageCatalogItemStatusCOMINGSOON captures enum value "COMING_SOON"
	StorageCatalogItemStatusCOMINGSOON StorageCatalogItemStatus = "COMING_SOON"

	// StorageCatalogItemStatusACTIVE captures enum value "ACTIVE"
	StorageCatalogItemStatusACTIVE StorageCatalogItemStatus = "ACTIVE"

	// StorageCatalogItemStatusDEPRECATED captures enum value "DEPRECATED"
	StorageCatalogItemStatusDEPRECATED StorageCatalogItemStatus = "DEPRECATED"

	// StorageCatalogItemStatusDISABLED captures enum value "DISABLED"
	StorageCatalogItemStatusDISABLED StorageCatalogItemStatus = "DISABLED"
)

// for schema
var storageCatalogItemStatusEnum []interface{}

func init() {
	var res []StorageCatalogItemStatus
	if err := json.Unmarshal([]byte(`["COMING_SOON","ACTIVE","DEPRECATED","DISABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		storageCatalogItemStatusEnum = append(storageCatalogItemStatusEnum, v)
	}
}

func (m StorageCatalogItemStatus) validateStorageCatalogItemStatusEnum(path, location string, value StorageCatalogItemStatus) error {
	if err := validate.Enum(path, location, value, storageCatalogItemStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this storage catalog item status
func (m StorageCatalogItemStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateStorageCatalogItemStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
