// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// StackObjectExecutionBodyExecutionStatus stack object execution body execution status
// swagger:model StackObjectExecutionBodyExecutionStatus
type StackObjectExecutionBodyExecutionStatus string

const (

	// StackObjectExecutionBodyExecutionStatusPENDING captures enum value "PENDING"
	StackObjectExecutionBodyExecutionStatusPENDING StackObjectExecutionBodyExecutionStatus = "PENDING"

	// StackObjectExecutionBodyExecutionStatusSCHEDULED captures enum value "SCHEDULED"
	StackObjectExecutionBodyExecutionStatusSCHEDULED StackObjectExecutionBodyExecutionStatus = "SCHEDULED"

	// StackObjectExecutionBodyExecutionStatusRUNNING captures enum value "RUNNING"
	StackObjectExecutionBodyExecutionStatusRUNNING StackObjectExecutionBodyExecutionStatus = "RUNNING"

	// StackObjectExecutionBodyExecutionStatusSKIPPED captures enum value "SKIPPED"
	StackObjectExecutionBodyExecutionStatusSKIPPED StackObjectExecutionBodyExecutionStatus = "SKIPPED"

	// StackObjectExecutionBodyExecutionStatusSUCCESS captures enum value "SUCCESS"
	StackObjectExecutionBodyExecutionStatusSUCCESS StackObjectExecutionBodyExecutionStatus = "SUCCESS"

	// StackObjectExecutionBodyExecutionStatusFAILED captures enum value "FAILED"
	StackObjectExecutionBodyExecutionStatusFAILED StackObjectExecutionBodyExecutionStatus = "FAILED"

	// StackObjectExecutionBodyExecutionStatusCANCELLED captures enum value "CANCELLED"
	StackObjectExecutionBodyExecutionStatusCANCELLED StackObjectExecutionBodyExecutionStatus = "CANCELLED"
)

// for schema
var stackObjectExecutionBodyExecutionStatusEnum []interface{}

func init() {
	var res []StackObjectExecutionBodyExecutionStatus
	if err := json.Unmarshal([]byte(`["PENDING","SCHEDULED","RUNNING","SKIPPED","SUCCESS","FAILED","CANCELLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		stackObjectExecutionBodyExecutionStatusEnum = append(stackObjectExecutionBodyExecutionStatusEnum, v)
	}
}

func (m StackObjectExecutionBodyExecutionStatus) validateStackObjectExecutionBodyExecutionStatusEnum(path, location string, value StackObjectExecutionBodyExecutionStatus) error {
	if err := validate.Enum(path, location, value, stackObjectExecutionBodyExecutionStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this stack object execution body execution status
func (m StackObjectExecutionBodyExecutionStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateStackObjectExecutionBodyExecutionStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
