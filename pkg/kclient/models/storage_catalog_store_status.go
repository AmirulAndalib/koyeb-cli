// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// StorageCatalogStoreStatus storage catalog store status
// swagger:model storageCatalogStoreStatus
type StorageCatalogStoreStatus string

const (

	// StorageCatalogStoreStatusCOMINGSOON captures enum value "COMING_SOON"
	StorageCatalogStoreStatusCOMINGSOON StorageCatalogStoreStatus = "COMING_SOON"

	// StorageCatalogStoreStatusACTIVE captures enum value "ACTIVE"
	StorageCatalogStoreStatusACTIVE StorageCatalogStoreStatus = "ACTIVE"

	// StorageCatalogStoreStatusDEPRECATED captures enum value "DEPRECATED"
	StorageCatalogStoreStatusDEPRECATED StorageCatalogStoreStatus = "DEPRECATED"

	// StorageCatalogStoreStatusDISABLED captures enum value "DISABLED"
	StorageCatalogStoreStatusDISABLED StorageCatalogStoreStatus = "DISABLED"
)

// for schema
var storageCatalogStoreStatusEnum []interface{}

func init() {
	var res []StorageCatalogStoreStatus
	if err := json.Unmarshal([]byte(`["COMING_SOON","ACTIVE","DEPRECATED","DISABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		storageCatalogStoreStatusEnum = append(storageCatalogStoreStatusEnum, v)
	}
}

func (m StorageCatalogStoreStatus) validateStorageCatalogStoreStatusEnum(path, location string, value StorageCatalogStoreStatus) error {
	if err := validate.Enum(path, location, value, storageCatalogStoreStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this storage catalog store status
func (m StorageCatalogStoreStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateStorageCatalogStoreStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
