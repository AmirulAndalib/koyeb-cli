// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// UserBodyAccountStatus user body account status
// swagger:model UserBodyAccountStatus
type UserBodyAccountStatus string

const (

	// UserBodyAccountStatusWARNING captures enum value "WARNING"
	UserBodyAccountStatusWARNING UserBodyAccountStatus = "WARNING"

	// UserBodyAccountStatusLOCKED captures enum value "LOCKED"
	UserBodyAccountStatusLOCKED UserBodyAccountStatus = "LOCKED"

	// UserBodyAccountStatusACTIVE captures enum value "ACTIVE"
	UserBodyAccountStatusACTIVE UserBodyAccountStatus = "ACTIVE"
)

// for schema
var userBodyAccountStatusEnum []interface{}

func init() {
	var res []UserBodyAccountStatus
	if err := json.Unmarshal([]byte(`["WARNING","LOCKED","ACTIVE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		userBodyAccountStatusEnum = append(userBodyAccountStatusEnum, v)
	}
}

func (m UserBodyAccountStatus) validateUserBodyAccountStatusEnum(path, location string, value UserBodyAccountStatus) error {
	if err := validate.Enum(path, location, value, userBodyAccountStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this user body account status
func (m UserBodyAccountStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateUserBodyAccountStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
