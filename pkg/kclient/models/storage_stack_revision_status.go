// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// StorageStackRevisionStatus storage stack revision status
// swagger:model storageStackRevisionStatus
type StorageStackRevisionStatus string

const (

	// StorageStackRevisionStatusVALID captures enum value "VALID"
	StorageStackRevisionStatusVALID StorageStackRevisionStatus = "VALID"

	// StorageStackRevisionStatusERROR captures enum value "ERROR"
	StorageStackRevisionStatusERROR StorageStackRevisionStatus = "ERROR"
)

// for schema
var storageStackRevisionStatusEnum []interface{}

func init() {
	var res []StorageStackRevisionStatus
	if err := json.Unmarshal([]byte(`["VALID","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		storageStackRevisionStatusEnum = append(storageStackRevisionStatusEnum, v)
	}
}

func (m StorageStackRevisionStatus) validateStorageStackRevisionStatusEnum(path, location string, value StorageStackRevisionStatus) error {
	if err := validate.Enum(path, location, value, storageStackRevisionStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this storage stack revision status
func (m StorageStackRevisionStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateStorageStackRevisionStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
