// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// StorageIntegrationType storage integration type
// swagger:model storageIntegrationType
type StorageIntegrationType string

const (

	// StorageIntegrationTypeSOURCE captures enum value "SOURCE"
	StorageIntegrationTypeSOURCE StorageIntegrationType = "SOURCE"

	// StorageIntegrationTypePROCESSING captures enum value "PROCESSING"
	StorageIntegrationTypePROCESSING StorageIntegrationType = "PROCESSING"

	// StorageIntegrationTypeSTORE captures enum value "STORE"
	StorageIntegrationTypeSTORE StorageIntegrationType = "STORE"

	// StorageIntegrationTypeWORKFLOW captures enum value "WORKFLOW"
	StorageIntegrationTypeWORKFLOW StorageIntegrationType = "WORKFLOW"
)

// for schema
var storageIntegrationTypeEnum []interface{}

func init() {
	var res []StorageIntegrationType
	if err := json.Unmarshal([]byte(`["SOURCE","PROCESSING","STORE","WORKFLOW"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		storageIntegrationTypeEnum = append(storageIntegrationTypeEnum, v)
	}
}

func (m StorageIntegrationType) validateStorageIntegrationTypeEnum(path, location string, value StorageIntegrationType) error {
	if err := validate.Enum(path, location, value, storageIntegrationTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this storage integration type
func (m StorageIntegrationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateStorageIntegrationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
