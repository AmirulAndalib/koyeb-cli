// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// StorageStackStatus storage stack status
// swagger:model storageStackStatus
type StorageStackStatus string

const (

	// StorageStackStatusPROVISIONNING captures enum value "PROVISIONNING"
	StorageStackStatusPROVISIONNING StorageStackStatus = "PROVISIONNING"

	// StorageStackStatusACTIVE captures enum value "ACTIVE"
	StorageStackStatusACTIVE StorageStackStatus = "ACTIVE"

	// StorageStackStatusERROR captures enum value "ERROR"
	StorageStackStatusERROR StorageStackStatus = "ERROR"
)

// for schema
var storageStackStatusEnum []interface{}

func init() {
	var res []StorageStackStatus
	if err := json.Unmarshal([]byte(`["PROVISIONNING","ACTIVE","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		storageStackStatusEnum = append(storageStackStatusEnum, v)
	}
}

func (m StorageStackStatus) validateStorageStackStatusEnum(path, location string, value StorageStackStatus) error {
	if err := validate.Enum(path, location, value, storageStackStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this storage stack status
func (m StorageStackStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateStorageStackStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
