// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// StorageSCMRepositoryType storage s c m repository type
//
// swagger:model storageSCMRepositoryType
type StorageSCMRepositoryType string

const (

	// StorageSCMRepositoryTypeGITHUB captures enum value "GITHUB"
	StorageSCMRepositoryTypeGITHUB StorageSCMRepositoryType = "GITHUB"
)

// for schema
var storageSCMRepositoryTypeEnum []interface{}

func init() {
	var res []StorageSCMRepositoryType
	if err := json.Unmarshal([]byte(`["GITHUB"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		storageSCMRepositoryTypeEnum = append(storageSCMRepositoryTypeEnum, v)
	}
}

func (m StorageSCMRepositoryType) validateStorageSCMRepositoryTypeEnum(path, location string, value StorageSCMRepositoryType) error {
	if err := validate.Enum(path, location, value, storageSCMRepositoryTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this storage s c m repository type
func (m StorageSCMRepositoryType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateStorageSCMRepositoryTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
