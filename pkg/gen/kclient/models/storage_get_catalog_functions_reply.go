// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// StorageGetCatalogFunctionsReply storage get catalog functions reply
//
// swagger:model storageGetCatalogFunctionsReply
type StorageGetCatalogFunctionsReply struct {

	// catalog function
	CatalogFunction *StorageCatalogFunction `json:"catalog_function,omitempty"`

	// versions
	Versions []string `json:"versions"`
}

// Validate validates this storage get catalog functions reply
func (m *StorageGetCatalogFunctionsReply) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCatalogFunction(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StorageGetCatalogFunctionsReply) validateCatalogFunction(formats strfmt.Registry) error {

	if swag.IsZero(m.CatalogFunction) { // not required
		return nil
	}

	if m.CatalogFunction != nil {
		if err := m.CatalogFunction.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("catalog_function")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *StorageGetCatalogFunctionsReply) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StorageGetCatalogFunctionsReply) UnmarshalBinary(b []byte) error {
	var res StorageGetCatalogFunctionsReply
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
