// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// StorageStackRevisionStatus - PROVISIONING: The revision is starting up, events won't be triggered to it
//  - STOPPING: The revision is being shutdown, existing runs won't get cancelled but new ones won't be triggered on it.
//  - ERROR: An error happened when deploying the new revision or when checking it's availability
//  - ACTIVE: The revision is active and everything goes well
//  - VALIDATION_ERROR: Indicate that the revision was not valid
//  - STOPPED: The revision is fully stopped nothing will get triggered
//  - BUILDING: The revision is being built
//  - BUILD_FAILED: The revision has failed to build
//
// swagger:model storageStackRevisionStatus
type StorageStackRevisionStatus string

const (

	// StorageStackRevisionStatusUNKNOWN captures enum value "UNKNOWN"
	StorageStackRevisionStatusUNKNOWN StorageStackRevisionStatus = "UNKNOWN"

	// StorageStackRevisionStatusUNAVAILABLE captures enum value "UNAVAILABLE"
	StorageStackRevisionStatusUNAVAILABLE StorageStackRevisionStatus = "UNAVAILABLE"

	// StorageStackRevisionStatusPROVISIONING captures enum value "PROVISIONING"
	StorageStackRevisionStatusPROVISIONING StorageStackRevisionStatus = "PROVISIONING"

	// StorageStackRevisionStatusSTOPPING captures enum value "STOPPING"
	StorageStackRevisionStatusSTOPPING StorageStackRevisionStatus = "STOPPING"

	// StorageStackRevisionStatusERROR captures enum value "ERROR"
	StorageStackRevisionStatusERROR StorageStackRevisionStatus = "ERROR"

	// StorageStackRevisionStatusACTIVE captures enum value "ACTIVE"
	StorageStackRevisionStatusACTIVE StorageStackRevisionStatus = "ACTIVE"

	// StorageStackRevisionStatusVALIDATIONERROR captures enum value "VALIDATION_ERROR"
	StorageStackRevisionStatusVALIDATIONERROR StorageStackRevisionStatus = "VALIDATION_ERROR"

	// StorageStackRevisionStatusSTOPPED captures enum value "STOPPED"
	StorageStackRevisionStatusSTOPPED StorageStackRevisionStatus = "STOPPED"

	// StorageStackRevisionStatusBUILDING captures enum value "BUILDING"
	StorageStackRevisionStatusBUILDING StorageStackRevisionStatus = "BUILDING"

	// StorageStackRevisionStatusBUILDFAILED captures enum value "BUILD_FAILED"
	StorageStackRevisionStatusBUILDFAILED StorageStackRevisionStatus = "BUILD_FAILED"
)

// for schema
var storageStackRevisionStatusEnum []interface{}

func init() {
	var res []StorageStackRevisionStatus
	if err := json.Unmarshal([]byte(`["UNKNOWN","UNAVAILABLE","PROVISIONING","STOPPING","ERROR","ACTIVE","VALIDATION_ERROR","STOPPED","BUILDING","BUILD_FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		storageStackRevisionStatusEnum = append(storageStackRevisionStatusEnum, v)
	}
}

func (m StorageStackRevisionStatus) validateStorageStackRevisionStatusEnum(path, location string, value StorageStackRevisionStatus) error {
	if err := validate.Enum(path, location, value, storageStackRevisionStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this storage stack revision status
func (m StorageStackRevisionStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateStorageStackRevisionStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
