// Code generated by go-swagger; DO NOT EDIT.

package connectors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// ConnectorsGetConnectorReader is a Reader for the ConnectorsGetConnector structure.
type ConnectorsGetConnectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConnectorsGetConnectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConnectorsGetConnectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewConnectorsGetConnectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewConnectorsGetConnectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewConnectorsGetConnectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewConnectorsGetConnectorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewConnectorsGetConnectorOK creates a ConnectorsGetConnectorOK with default headers values
func NewConnectorsGetConnectorOK() *ConnectorsGetConnectorOK {
	return &ConnectorsGetConnectorOK{}
}

/*ConnectorsGetConnectorOK handles this case with default header values.

A successful response.
*/
type ConnectorsGetConnectorOK struct {
	Payload *models.StorageGetConnectorReply
}

func (o *ConnectorsGetConnectorOK) Error() string {
	return fmt.Sprintf("[GET /v1/connectors/{idOrName}][%d] connectorsGetConnectorOK  %+v", 200, o.Payload)
}

func (o *ConnectorsGetConnectorOK) GetPayload() *models.StorageGetConnectorReply {
	return o.Payload
}

func (o *ConnectorsGetConnectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageGetConnectorReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectorsGetConnectorBadRequest creates a ConnectorsGetConnectorBadRequest with default headers values
func NewConnectorsGetConnectorBadRequest() *ConnectorsGetConnectorBadRequest {
	return &ConnectorsGetConnectorBadRequest{}
}

/*ConnectorsGetConnectorBadRequest handles this case with default header values.

Validation error
*/
type ConnectorsGetConnectorBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *ConnectorsGetConnectorBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/connectors/{idOrName}][%d] connectorsGetConnectorBadRequest  %+v", 400, o.Payload)
}

func (o *ConnectorsGetConnectorBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *ConnectorsGetConnectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectorsGetConnectorForbidden creates a ConnectorsGetConnectorForbidden with default headers values
func NewConnectorsGetConnectorForbidden() *ConnectorsGetConnectorForbidden {
	return &ConnectorsGetConnectorForbidden{}
}

/*ConnectorsGetConnectorForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type ConnectorsGetConnectorForbidden struct {
	Payload *models.CommonError
}

func (o *ConnectorsGetConnectorForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/connectors/{idOrName}][%d] connectorsGetConnectorForbidden  %+v", 403, o.Payload)
}

func (o *ConnectorsGetConnectorForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ConnectorsGetConnectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectorsGetConnectorNotFound creates a ConnectorsGetConnectorNotFound with default headers values
func NewConnectorsGetConnectorNotFound() *ConnectorsGetConnectorNotFound {
	return &ConnectorsGetConnectorNotFound{}
}

/*ConnectorsGetConnectorNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type ConnectorsGetConnectorNotFound struct {
	Payload *models.CommonError
}

func (o *ConnectorsGetConnectorNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/connectors/{idOrName}][%d] connectorsGetConnectorNotFound  %+v", 404, o.Payload)
}

func (o *ConnectorsGetConnectorNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ConnectorsGetConnectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectorsGetConnectorDefault creates a ConnectorsGetConnectorDefault with default headers values
func NewConnectorsGetConnectorDefault(code int) *ConnectorsGetConnectorDefault {
	return &ConnectorsGetConnectorDefault{
		_statusCode: code,
	}
}

/*ConnectorsGetConnectorDefault handles this case with default header values.

An unexpected error response
*/
type ConnectorsGetConnectorDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the connectors get connector default response
func (o *ConnectorsGetConnectorDefault) Code() int {
	return o._statusCode
}

func (o *ConnectorsGetConnectorDefault) Error() string {
	return fmt.Sprintf("[GET /v1/connectors/{idOrName}][%d] Connectors_GetConnector default  %+v", o._statusCode, o.Payload)
}

func (o *ConnectorsGetConnectorDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *ConnectorsGetConnectorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
