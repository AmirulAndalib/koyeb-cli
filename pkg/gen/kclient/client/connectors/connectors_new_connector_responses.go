// Code generated by go-swagger; DO NOT EDIT.

package connectors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// ConnectorsNewConnectorReader is a Reader for the ConnectorsNewConnector structure.
type ConnectorsNewConnectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConnectorsNewConnectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConnectorsNewConnectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewConnectorsNewConnectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewConnectorsNewConnectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewConnectorsNewConnectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewConnectorsNewConnectorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewConnectorsNewConnectorOK creates a ConnectorsNewConnectorOK with default headers values
func NewConnectorsNewConnectorOK() *ConnectorsNewConnectorOK {
	return &ConnectorsNewConnectorOK{}
}

/*ConnectorsNewConnectorOK handles this case with default header values.

A successful response.
*/
type ConnectorsNewConnectorOK struct {
	Payload *models.StorageNewConnectorReply
}

func (o *ConnectorsNewConnectorOK) Error() string {
	return fmt.Sprintf("[POST /v1/connectors][%d] connectorsNewConnectorOK  %+v", 200, o.Payload)
}

func (o *ConnectorsNewConnectorOK) GetPayload() *models.StorageNewConnectorReply {
	return o.Payload
}

func (o *ConnectorsNewConnectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageNewConnectorReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectorsNewConnectorBadRequest creates a ConnectorsNewConnectorBadRequest with default headers values
func NewConnectorsNewConnectorBadRequest() *ConnectorsNewConnectorBadRequest {
	return &ConnectorsNewConnectorBadRequest{}
}

/*ConnectorsNewConnectorBadRequest handles this case with default header values.

Validation error
*/
type ConnectorsNewConnectorBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *ConnectorsNewConnectorBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/connectors][%d] connectorsNewConnectorBadRequest  %+v", 400, o.Payload)
}

func (o *ConnectorsNewConnectorBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *ConnectorsNewConnectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectorsNewConnectorForbidden creates a ConnectorsNewConnectorForbidden with default headers values
func NewConnectorsNewConnectorForbidden() *ConnectorsNewConnectorForbidden {
	return &ConnectorsNewConnectorForbidden{}
}

/*ConnectorsNewConnectorForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type ConnectorsNewConnectorForbidden struct {
	Payload *models.CommonError
}

func (o *ConnectorsNewConnectorForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/connectors][%d] connectorsNewConnectorForbidden  %+v", 403, o.Payload)
}

func (o *ConnectorsNewConnectorForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ConnectorsNewConnectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectorsNewConnectorNotFound creates a ConnectorsNewConnectorNotFound with default headers values
func NewConnectorsNewConnectorNotFound() *ConnectorsNewConnectorNotFound {
	return &ConnectorsNewConnectorNotFound{}
}

/*ConnectorsNewConnectorNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type ConnectorsNewConnectorNotFound struct {
	Payload *models.CommonError
}

func (o *ConnectorsNewConnectorNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/connectors][%d] connectorsNewConnectorNotFound  %+v", 404, o.Payload)
}

func (o *ConnectorsNewConnectorNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ConnectorsNewConnectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectorsNewConnectorDefault creates a ConnectorsNewConnectorDefault with default headers values
func NewConnectorsNewConnectorDefault(code int) *ConnectorsNewConnectorDefault {
	return &ConnectorsNewConnectorDefault{
		_statusCode: code,
	}
}

/*ConnectorsNewConnectorDefault handles this case with default header values.

An unexpected error response
*/
type ConnectorsNewConnectorDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the connectors new connector default response
func (o *ConnectorsNewConnectorDefault) Code() int {
	return o._statusCode
}

func (o *ConnectorsNewConnectorDefault) Error() string {
	return fmt.Sprintf("[POST /v1/connectors][%d] Connectors_NewConnector default  %+v", o._statusCode, o.Payload)
}

func (o *ConnectorsNewConnectorDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *ConnectorsNewConnectorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
