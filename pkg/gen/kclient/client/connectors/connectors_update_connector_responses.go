// Code generated by go-swagger; DO NOT EDIT.

package connectors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// ConnectorsUpdateConnectorReader is a Reader for the ConnectorsUpdateConnector structure.
type ConnectorsUpdateConnectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConnectorsUpdateConnectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConnectorsUpdateConnectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewConnectorsUpdateConnectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewConnectorsUpdateConnectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewConnectorsUpdateConnectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewConnectorsUpdateConnectorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewConnectorsUpdateConnectorOK creates a ConnectorsUpdateConnectorOK with default headers values
func NewConnectorsUpdateConnectorOK() *ConnectorsUpdateConnectorOK {
	return &ConnectorsUpdateConnectorOK{}
}

/*ConnectorsUpdateConnectorOK handles this case with default header values.

A successful response.
*/
type ConnectorsUpdateConnectorOK struct {
	Payload *models.StorageUpdateConnectorReply
}

func (o *ConnectorsUpdateConnectorOK) Error() string {
	return fmt.Sprintf("[PUT /v1/connectors/{idOrName}][%d] connectorsUpdateConnectorOK  %+v", 200, o.Payload)
}

func (o *ConnectorsUpdateConnectorOK) GetPayload() *models.StorageUpdateConnectorReply {
	return o.Payload
}

func (o *ConnectorsUpdateConnectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageUpdateConnectorReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectorsUpdateConnectorBadRequest creates a ConnectorsUpdateConnectorBadRequest with default headers values
func NewConnectorsUpdateConnectorBadRequest() *ConnectorsUpdateConnectorBadRequest {
	return &ConnectorsUpdateConnectorBadRequest{}
}

/*ConnectorsUpdateConnectorBadRequest handles this case with default header values.

Validation error
*/
type ConnectorsUpdateConnectorBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *ConnectorsUpdateConnectorBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/connectors/{idOrName}][%d] connectorsUpdateConnectorBadRequest  %+v", 400, o.Payload)
}

func (o *ConnectorsUpdateConnectorBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *ConnectorsUpdateConnectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectorsUpdateConnectorForbidden creates a ConnectorsUpdateConnectorForbidden with default headers values
func NewConnectorsUpdateConnectorForbidden() *ConnectorsUpdateConnectorForbidden {
	return &ConnectorsUpdateConnectorForbidden{}
}

/*ConnectorsUpdateConnectorForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type ConnectorsUpdateConnectorForbidden struct {
	Payload *models.CommonError
}

func (o *ConnectorsUpdateConnectorForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/connectors/{idOrName}][%d] connectorsUpdateConnectorForbidden  %+v", 403, o.Payload)
}

func (o *ConnectorsUpdateConnectorForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ConnectorsUpdateConnectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectorsUpdateConnectorNotFound creates a ConnectorsUpdateConnectorNotFound with default headers values
func NewConnectorsUpdateConnectorNotFound() *ConnectorsUpdateConnectorNotFound {
	return &ConnectorsUpdateConnectorNotFound{}
}

/*ConnectorsUpdateConnectorNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type ConnectorsUpdateConnectorNotFound struct {
	Payload *models.CommonError
}

func (o *ConnectorsUpdateConnectorNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/connectors/{idOrName}][%d] connectorsUpdateConnectorNotFound  %+v", 404, o.Payload)
}

func (o *ConnectorsUpdateConnectorNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ConnectorsUpdateConnectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectorsUpdateConnectorDefault creates a ConnectorsUpdateConnectorDefault with default headers values
func NewConnectorsUpdateConnectorDefault(code int) *ConnectorsUpdateConnectorDefault {
	return &ConnectorsUpdateConnectorDefault{
		_statusCode: code,
	}
}

/*ConnectorsUpdateConnectorDefault handles this case with default header values.

An unexpected error response
*/
type ConnectorsUpdateConnectorDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the connectors update connector default response
func (o *ConnectorsUpdateConnectorDefault) Code() int {
	return o._statusCode
}

func (o *ConnectorsUpdateConnectorDefault) Error() string {
	return fmt.Sprintf("[PUT /v1/connectors/{idOrName}][%d] Connectors_UpdateConnector default  %+v", o._statusCode, o.Payload)
}

func (o *ConnectorsUpdateConnectorDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *ConnectorsUpdateConnectorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
