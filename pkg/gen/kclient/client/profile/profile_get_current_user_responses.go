// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// ProfileGetCurrentUserReader is a Reader for the ProfileGetCurrentUser structure.
type ProfileGetCurrentUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProfileGetCurrentUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProfileGetCurrentUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProfileGetCurrentUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProfileGetCurrentUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProfileGetCurrentUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProfileGetCurrentUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProfileGetCurrentUserOK creates a ProfileGetCurrentUserOK with default headers values
func NewProfileGetCurrentUserOK() *ProfileGetCurrentUserOK {
	return &ProfileGetCurrentUserOK{}
}

/*ProfileGetCurrentUserOK handles this case with default header values.

A successful response.
*/
type ProfileGetCurrentUserOK struct {
	Payload *models.AccountUserReply
}

func (o *ProfileGetCurrentUserOK) Error() string {
	return fmt.Sprintf("[GET /v1/account/profile][%d] profileGetCurrentUserOK  %+v", 200, o.Payload)
}

func (o *ProfileGetCurrentUserOK) GetPayload() *models.AccountUserReply {
	return o.Payload
}

func (o *ProfileGetCurrentUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountUserReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileGetCurrentUserBadRequest creates a ProfileGetCurrentUserBadRequest with default headers values
func NewProfileGetCurrentUserBadRequest() *ProfileGetCurrentUserBadRequest {
	return &ProfileGetCurrentUserBadRequest{}
}

/*ProfileGetCurrentUserBadRequest handles this case with default header values.

Validation error
*/
type ProfileGetCurrentUserBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *ProfileGetCurrentUserBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/account/profile][%d] profileGetCurrentUserBadRequest  %+v", 400, o.Payload)
}

func (o *ProfileGetCurrentUserBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *ProfileGetCurrentUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileGetCurrentUserForbidden creates a ProfileGetCurrentUserForbidden with default headers values
func NewProfileGetCurrentUserForbidden() *ProfileGetCurrentUserForbidden {
	return &ProfileGetCurrentUserForbidden{}
}

/*ProfileGetCurrentUserForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type ProfileGetCurrentUserForbidden struct {
	Payload *models.CommonError
}

func (o *ProfileGetCurrentUserForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/account/profile][%d] profileGetCurrentUserForbidden  %+v", 403, o.Payload)
}

func (o *ProfileGetCurrentUserForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ProfileGetCurrentUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileGetCurrentUserNotFound creates a ProfileGetCurrentUserNotFound with default headers values
func NewProfileGetCurrentUserNotFound() *ProfileGetCurrentUserNotFound {
	return &ProfileGetCurrentUserNotFound{}
}

/*ProfileGetCurrentUserNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type ProfileGetCurrentUserNotFound struct {
	Payload *models.CommonError
}

func (o *ProfileGetCurrentUserNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/account/profile][%d] profileGetCurrentUserNotFound  %+v", 404, o.Payload)
}

func (o *ProfileGetCurrentUserNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *ProfileGetCurrentUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileGetCurrentUserDefault creates a ProfileGetCurrentUserDefault with default headers values
func NewProfileGetCurrentUserDefault(code int) *ProfileGetCurrentUserDefault {
	return &ProfileGetCurrentUserDefault{
		_statusCode: code,
	}
}

/*ProfileGetCurrentUserDefault handles this case with default header values.

An unexpected error response
*/
type ProfileGetCurrentUserDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the profile get current user default response
func (o *ProfileGetCurrentUserDefault) Code() int {
	return o._statusCode
}

func (o *ProfileGetCurrentUserDefault) Error() string {
	return fmt.Sprintf("[GET /v1/account/profile][%d] profile_GetCurrentUser default  %+v", o._statusCode, o.Payload)
}

func (o *ProfileGetCurrentUserDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *ProfileGetCurrentUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
