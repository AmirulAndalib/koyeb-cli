// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewProfileGetOAuthOptionsParams creates a new ProfileGetOAuthOptionsParams object
// with the default values initialized.
func NewProfileGetOAuthOptionsParams() *ProfileGetOAuthOptionsParams {
	var (
		actionDefault = string("signin")
	)
	return &ProfileGetOAuthOptionsParams{
		Action: &actionDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewProfileGetOAuthOptionsParamsWithTimeout creates a new ProfileGetOAuthOptionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewProfileGetOAuthOptionsParamsWithTimeout(timeout time.Duration) *ProfileGetOAuthOptionsParams {
	var (
		actionDefault = string("signin")
	)
	return &ProfileGetOAuthOptionsParams{
		Action: &actionDefault,

		timeout: timeout,
	}
}

// NewProfileGetOAuthOptionsParamsWithContext creates a new ProfileGetOAuthOptionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewProfileGetOAuthOptionsParamsWithContext(ctx context.Context) *ProfileGetOAuthOptionsParams {
	var (
		actionDefault = string("signin")
	)
	return &ProfileGetOAuthOptionsParams{
		Action: &actionDefault,

		Context: ctx,
	}
}

// NewProfileGetOAuthOptionsParamsWithHTTPClient creates a new ProfileGetOAuthOptionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewProfileGetOAuthOptionsParamsWithHTTPClient(client *http.Client) *ProfileGetOAuthOptionsParams {
	var (
		actionDefault = string("signin")
	)
	return &ProfileGetOAuthOptionsParams{
		Action:     &actionDefault,
		HTTPClient: client,
	}
}

/*ProfileGetOAuthOptionsParams contains all the parameters to send to the API endpoint
for the profile get o auth options operation typically these are written to a http.Request
*/
type ProfileGetOAuthOptionsParams struct {

	/*Action
	  Which authentication flow is being initiated.

	*/
	Action *string
	/*Metadata
	  A small (limited to 400 characters) string of arbitrary metadata which will be encoded in the state.

	*/
	Metadata *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the profile get o auth options params
func (o *ProfileGetOAuthOptionsParams) WithTimeout(timeout time.Duration) *ProfileGetOAuthOptionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the profile get o auth options params
func (o *ProfileGetOAuthOptionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the profile get o auth options params
func (o *ProfileGetOAuthOptionsParams) WithContext(ctx context.Context) *ProfileGetOAuthOptionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the profile get o auth options params
func (o *ProfileGetOAuthOptionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the profile get o auth options params
func (o *ProfileGetOAuthOptionsParams) WithHTTPClient(client *http.Client) *ProfileGetOAuthOptionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the profile get o auth options params
func (o *ProfileGetOAuthOptionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAction adds the action to the profile get o auth options params
func (o *ProfileGetOAuthOptionsParams) WithAction(action *string) *ProfileGetOAuthOptionsParams {
	o.SetAction(action)
	return o
}

// SetAction adds the action to the profile get o auth options params
func (o *ProfileGetOAuthOptionsParams) SetAction(action *string) {
	o.Action = action
}

// WithMetadata adds the metadata to the profile get o auth options params
func (o *ProfileGetOAuthOptionsParams) WithMetadata(metadata *string) *ProfileGetOAuthOptionsParams {
	o.SetMetadata(metadata)
	return o
}

// SetMetadata adds the metadata to the profile get o auth options params
func (o *ProfileGetOAuthOptionsParams) SetMetadata(metadata *string) {
	o.Metadata = metadata
}

// WriteToRequest writes these params to a swagger request
func (o *ProfileGetOAuthOptionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Action != nil {

		// query param action
		var qrAction string
		if o.Action != nil {
			qrAction = *o.Action
		}
		qAction := qrAction
		if qAction != "" {
			if err := r.SetQueryParam("action", qAction); err != nil {
				return err
			}
		}

	}

	if o.Metadata != nil {

		// query param metadata
		var qrMetadata string
		if o.Metadata != nil {
			qrMetadata = *o.Metadata
		}
		qMetadata := qrMetadata
		if qMetadata != "" {
			if err := r.SetQueryParam("metadata", qMetadata); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
