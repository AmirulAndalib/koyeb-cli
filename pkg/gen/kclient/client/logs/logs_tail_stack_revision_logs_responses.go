// Code generated by go-swagger; DO NOT EDIT.

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// LogsTailStackRevisionLogsReader is a Reader for the LogsTailStackRevisionLogs structure.
type LogsTailStackRevisionLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogsTailStackRevisionLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogsTailStackRevisionLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLogsTailStackRevisionLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLogsTailStackRevisionLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLogsTailStackRevisionLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewLogsTailStackRevisionLogsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewLogsTailStackRevisionLogsOK creates a LogsTailStackRevisionLogsOK with default headers values
func NewLogsTailStackRevisionLogsOK() *LogsTailStackRevisionLogsOK {
	return &LogsTailStackRevisionLogsOK{}
}

/*LogsTailStackRevisionLogsOK handles this case with default header values.

A successful response.(streaming responses)
*/
type LogsTailStackRevisionLogsOK struct {
	Payload *LogsTailStackRevisionLogsOKBody
}

func (o *LogsTailStackRevisionLogsOK) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/logs/tail][%d] logsTailStackRevisionLogsOK  %+v", 200, o.Payload)
}

func (o *LogsTailStackRevisionLogsOK) GetPayload() *LogsTailStackRevisionLogsOKBody {
	return o.Payload
}

func (o *LogsTailStackRevisionLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LogsTailStackRevisionLogsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsTailStackRevisionLogsBadRequest creates a LogsTailStackRevisionLogsBadRequest with default headers values
func NewLogsTailStackRevisionLogsBadRequest() *LogsTailStackRevisionLogsBadRequest {
	return &LogsTailStackRevisionLogsBadRequest{}
}

/*LogsTailStackRevisionLogsBadRequest handles this case with default header values.

Validation error
*/
type LogsTailStackRevisionLogsBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *LogsTailStackRevisionLogsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/logs/tail][%d] logsTailStackRevisionLogsBadRequest  %+v", 400, o.Payload)
}

func (o *LogsTailStackRevisionLogsBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *LogsTailStackRevisionLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsTailStackRevisionLogsForbidden creates a LogsTailStackRevisionLogsForbidden with default headers values
func NewLogsTailStackRevisionLogsForbidden() *LogsTailStackRevisionLogsForbidden {
	return &LogsTailStackRevisionLogsForbidden{}
}

/*LogsTailStackRevisionLogsForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type LogsTailStackRevisionLogsForbidden struct {
	Payload *models.CommonError
}

func (o *LogsTailStackRevisionLogsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/logs/tail][%d] logsTailStackRevisionLogsForbidden  %+v", 403, o.Payload)
}

func (o *LogsTailStackRevisionLogsForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *LogsTailStackRevisionLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsTailStackRevisionLogsNotFound creates a LogsTailStackRevisionLogsNotFound with default headers values
func NewLogsTailStackRevisionLogsNotFound() *LogsTailStackRevisionLogsNotFound {
	return &LogsTailStackRevisionLogsNotFound{}
}

/*LogsTailStackRevisionLogsNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type LogsTailStackRevisionLogsNotFound struct {
	Payload *models.CommonError
}

func (o *LogsTailStackRevisionLogsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/logs/tail][%d] logsTailStackRevisionLogsNotFound  %+v", 404, o.Payload)
}

func (o *LogsTailStackRevisionLogsNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *LogsTailStackRevisionLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsTailStackRevisionLogsDefault creates a LogsTailStackRevisionLogsDefault with default headers values
func NewLogsTailStackRevisionLogsDefault(code int) *LogsTailStackRevisionLogsDefault {
	return &LogsTailStackRevisionLogsDefault{
		_statusCode: code,
	}
}

/*LogsTailStackRevisionLogsDefault handles this case with default header values.

An unexpected error response
*/
type LogsTailStackRevisionLogsDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the logs tail stack revision logs default response
func (o *LogsTailStackRevisionLogsDefault) Code() int {
	return o._statusCode
}

func (o *LogsTailStackRevisionLogsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/logs/tail][%d] logs_TailStackRevisionLogs default  %+v", o._statusCode, o.Payload)
}

func (o *LogsTailStackRevisionLogsDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *LogsTailStackRevisionLogsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LogsTailStackRevisionLogsOKBody Stream result of storageLogEntry
swagger:model LogsTailStackRevisionLogsOKBody
*/
type LogsTailStackRevisionLogsOKBody struct {

	// error
	Error *models.RuntimeStreamError `json:"error,omitempty"`

	// result
	Result *models.StorageLogEntry `json:"result,omitempty"`
}

// Validate validates this logs tail stack revision logs o k body
func (o *LogsTailStackRevisionLogsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *LogsTailStackRevisionLogsOKBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("logsTailStackRevisionLogsOK" + "." + "error")
			}
			return err
		}
	}

	return nil
}

func (o *LogsTailStackRevisionLogsOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("logsTailStackRevisionLogsOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *LogsTailStackRevisionLogsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LogsTailStackRevisionLogsOKBody) UnmarshalBinary(b []byte) error {
	var res LogsTailStackRevisionLogsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
