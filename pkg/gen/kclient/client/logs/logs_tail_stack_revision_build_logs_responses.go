// Code generated by go-swagger; DO NOT EDIT.

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// LogsTailStackRevisionBuildLogsReader is a Reader for the LogsTailStackRevisionBuildLogs structure.
type LogsTailStackRevisionBuildLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogsTailStackRevisionBuildLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogsTailStackRevisionBuildLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLogsTailStackRevisionBuildLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLogsTailStackRevisionBuildLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLogsTailStackRevisionBuildLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewLogsTailStackRevisionBuildLogsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewLogsTailStackRevisionBuildLogsOK creates a LogsTailStackRevisionBuildLogsOK with default headers values
func NewLogsTailStackRevisionBuildLogsOK() *LogsTailStackRevisionBuildLogsOK {
	return &LogsTailStackRevisionBuildLogsOK{}
}

/*LogsTailStackRevisionBuildLogsOK handles this case with default header values.

A successful response.(streaming responses)
*/
type LogsTailStackRevisionBuildLogsOK struct {
	Payload *LogsTailStackRevisionBuildLogsOKBody
}

func (o *LogsTailStackRevisionBuildLogsOK) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/builds/tail][%d] logsTailStackRevisionBuildLogsOK  %+v", 200, o.Payload)
}

func (o *LogsTailStackRevisionBuildLogsOK) GetPayload() *LogsTailStackRevisionBuildLogsOKBody {
	return o.Payload
}

func (o *LogsTailStackRevisionBuildLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LogsTailStackRevisionBuildLogsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsTailStackRevisionBuildLogsBadRequest creates a LogsTailStackRevisionBuildLogsBadRequest with default headers values
func NewLogsTailStackRevisionBuildLogsBadRequest() *LogsTailStackRevisionBuildLogsBadRequest {
	return &LogsTailStackRevisionBuildLogsBadRequest{}
}

/*LogsTailStackRevisionBuildLogsBadRequest handles this case with default header values.

Validation error
*/
type LogsTailStackRevisionBuildLogsBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *LogsTailStackRevisionBuildLogsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/builds/tail][%d] logsTailStackRevisionBuildLogsBadRequest  %+v", 400, o.Payload)
}

func (o *LogsTailStackRevisionBuildLogsBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *LogsTailStackRevisionBuildLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsTailStackRevisionBuildLogsForbidden creates a LogsTailStackRevisionBuildLogsForbidden with default headers values
func NewLogsTailStackRevisionBuildLogsForbidden() *LogsTailStackRevisionBuildLogsForbidden {
	return &LogsTailStackRevisionBuildLogsForbidden{}
}

/*LogsTailStackRevisionBuildLogsForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type LogsTailStackRevisionBuildLogsForbidden struct {
	Payload *models.CommonError
}

func (o *LogsTailStackRevisionBuildLogsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/builds/tail][%d] logsTailStackRevisionBuildLogsForbidden  %+v", 403, o.Payload)
}

func (o *LogsTailStackRevisionBuildLogsForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *LogsTailStackRevisionBuildLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsTailStackRevisionBuildLogsNotFound creates a LogsTailStackRevisionBuildLogsNotFound with default headers values
func NewLogsTailStackRevisionBuildLogsNotFound() *LogsTailStackRevisionBuildLogsNotFound {
	return &LogsTailStackRevisionBuildLogsNotFound{}
}

/*LogsTailStackRevisionBuildLogsNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type LogsTailStackRevisionBuildLogsNotFound struct {
	Payload *models.CommonError
}

func (o *LogsTailStackRevisionBuildLogsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/builds/tail][%d] logsTailStackRevisionBuildLogsNotFound  %+v", 404, o.Payload)
}

func (o *LogsTailStackRevisionBuildLogsNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *LogsTailStackRevisionBuildLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsTailStackRevisionBuildLogsDefault creates a LogsTailStackRevisionBuildLogsDefault with default headers values
func NewLogsTailStackRevisionBuildLogsDefault(code int) *LogsTailStackRevisionBuildLogsDefault {
	return &LogsTailStackRevisionBuildLogsDefault{
		_statusCode: code,
	}
}

/*LogsTailStackRevisionBuildLogsDefault handles this case with default header values.

An unexpected error response
*/
type LogsTailStackRevisionBuildLogsDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the logs tail stack revision build logs default response
func (o *LogsTailStackRevisionBuildLogsDefault) Code() int {
	return o._statusCode
}

func (o *LogsTailStackRevisionBuildLogsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/builds/tail][%d] logs_TailStackRevisionBuildLogs default  %+v", o._statusCode, o.Payload)
}

func (o *LogsTailStackRevisionBuildLogsDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *LogsTailStackRevisionBuildLogsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LogsTailStackRevisionBuildLogsOKBody Stream result of storageLogEntry
swagger:model LogsTailStackRevisionBuildLogsOKBody
*/
type LogsTailStackRevisionBuildLogsOKBody struct {

	// error
	Error *models.RuntimeStreamError `json:"error,omitempty"`

	// result
	Result *models.StorageLogEntry `json:"result,omitempty"`
}

// Validate validates this logs tail stack revision build logs o k body
func (o *LogsTailStackRevisionBuildLogsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *LogsTailStackRevisionBuildLogsOKBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("logsTailStackRevisionBuildLogsOK" + "." + "error")
			}
			return err
		}
	}

	return nil
}

func (o *LogsTailStackRevisionBuildLogsOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("logsTailStackRevisionBuildLogsOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *LogsTailStackRevisionBuildLogsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LogsTailStackRevisionBuildLogsOKBody) UnmarshalBinary(b []byte) error {
	var res LogsTailStackRevisionBuildLogsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
