// Code generated by go-swagger; DO NOT EDIT.

package functions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// FunctionsGetFunctionReader is a Reader for the FunctionsGetFunction structure.
type FunctionsGetFunctionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FunctionsGetFunctionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFunctionsGetFunctionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFunctionsGetFunctionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFunctionsGetFunctionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFunctionsGetFunctionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewFunctionsGetFunctionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFunctionsGetFunctionOK creates a FunctionsGetFunctionOK with default headers values
func NewFunctionsGetFunctionOK() *FunctionsGetFunctionOK {
	return &FunctionsGetFunctionOK{}
}

/*FunctionsGetFunctionOK handles this case with default header values.

A successful response.
*/
type FunctionsGetFunctionOK struct {
	Payload *models.StorageGetFunctionReply
}

func (o *FunctionsGetFunctionOK) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/functions/{function}][%d] functionsGetFunctionOK  %+v", 200, o.Payload)
}

func (o *FunctionsGetFunctionOK) GetPayload() *models.StorageGetFunctionReply {
	return o.Payload
}

func (o *FunctionsGetFunctionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageGetFunctionReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsGetFunctionBadRequest creates a FunctionsGetFunctionBadRequest with default headers values
func NewFunctionsGetFunctionBadRequest() *FunctionsGetFunctionBadRequest {
	return &FunctionsGetFunctionBadRequest{}
}

/*FunctionsGetFunctionBadRequest handles this case with default header values.

Validation error
*/
type FunctionsGetFunctionBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *FunctionsGetFunctionBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/functions/{function}][%d] functionsGetFunctionBadRequest  %+v", 400, o.Payload)
}

func (o *FunctionsGetFunctionBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *FunctionsGetFunctionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsGetFunctionForbidden creates a FunctionsGetFunctionForbidden with default headers values
func NewFunctionsGetFunctionForbidden() *FunctionsGetFunctionForbidden {
	return &FunctionsGetFunctionForbidden{}
}

/*FunctionsGetFunctionForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type FunctionsGetFunctionForbidden struct {
	Payload *models.CommonError
}

func (o *FunctionsGetFunctionForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/functions/{function}][%d] functionsGetFunctionForbidden  %+v", 403, o.Payload)
}

func (o *FunctionsGetFunctionForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *FunctionsGetFunctionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsGetFunctionNotFound creates a FunctionsGetFunctionNotFound with default headers values
func NewFunctionsGetFunctionNotFound() *FunctionsGetFunctionNotFound {
	return &FunctionsGetFunctionNotFound{}
}

/*FunctionsGetFunctionNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type FunctionsGetFunctionNotFound struct {
	Payload *models.CommonError
}

func (o *FunctionsGetFunctionNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/functions/{function}][%d] functionsGetFunctionNotFound  %+v", 404, o.Payload)
}

func (o *FunctionsGetFunctionNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *FunctionsGetFunctionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsGetFunctionDefault creates a FunctionsGetFunctionDefault with default headers values
func NewFunctionsGetFunctionDefault(code int) *FunctionsGetFunctionDefault {
	return &FunctionsGetFunctionDefault{
		_statusCode: code,
	}
}

/*FunctionsGetFunctionDefault handles this case with default header values.

An unexpected error response
*/
type FunctionsGetFunctionDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the functions get function default response
func (o *FunctionsGetFunctionDefault) Code() int {
	return o._statusCode
}

func (o *FunctionsGetFunctionDefault) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/functions/{function}][%d] Functions_GetFunction default  %+v", o._statusCode, o.Payload)
}

func (o *FunctionsGetFunctionDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *FunctionsGetFunctionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
