// Code generated by go-swagger; DO NOT EDIT.

package functions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// FunctionsFetchFunctionExecutionsReader is a Reader for the FunctionsFetchFunctionExecutions structure.
type FunctionsFetchFunctionExecutionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FunctionsFetchFunctionExecutionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFunctionsFetchFunctionExecutionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFunctionsFetchFunctionExecutionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFunctionsFetchFunctionExecutionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFunctionsFetchFunctionExecutionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewFunctionsFetchFunctionExecutionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFunctionsFetchFunctionExecutionsOK creates a FunctionsFetchFunctionExecutionsOK with default headers values
func NewFunctionsFetchFunctionExecutionsOK() *FunctionsFetchFunctionExecutionsOK {
	return &FunctionsFetchFunctionExecutionsOK{}
}

/*FunctionsFetchFunctionExecutionsOK handles this case with default header values.

A successful response.
*/
type FunctionsFetchFunctionExecutionsOK struct {
	Payload *models.StorageFetchFunctionExecutionsReply
}

func (o *FunctionsFetchFunctionExecutionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/functions/{function}/executions][%d] functionsFetchFunctionExecutionsOK  %+v", 200, o.Payload)
}

func (o *FunctionsFetchFunctionExecutionsOK) GetPayload() *models.StorageFetchFunctionExecutionsReply {
	return o.Payload
}

func (o *FunctionsFetchFunctionExecutionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageFetchFunctionExecutionsReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsFetchFunctionExecutionsBadRequest creates a FunctionsFetchFunctionExecutionsBadRequest with default headers values
func NewFunctionsFetchFunctionExecutionsBadRequest() *FunctionsFetchFunctionExecutionsBadRequest {
	return &FunctionsFetchFunctionExecutionsBadRequest{}
}

/*FunctionsFetchFunctionExecutionsBadRequest handles this case with default header values.

Validation error
*/
type FunctionsFetchFunctionExecutionsBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *FunctionsFetchFunctionExecutionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/functions/{function}/executions][%d] functionsFetchFunctionExecutionsBadRequest  %+v", 400, o.Payload)
}

func (o *FunctionsFetchFunctionExecutionsBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *FunctionsFetchFunctionExecutionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsFetchFunctionExecutionsForbidden creates a FunctionsFetchFunctionExecutionsForbidden with default headers values
func NewFunctionsFetchFunctionExecutionsForbidden() *FunctionsFetchFunctionExecutionsForbidden {
	return &FunctionsFetchFunctionExecutionsForbidden{}
}

/*FunctionsFetchFunctionExecutionsForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type FunctionsFetchFunctionExecutionsForbidden struct {
	Payload *models.CommonError
}

func (o *FunctionsFetchFunctionExecutionsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/functions/{function}/executions][%d] functionsFetchFunctionExecutionsForbidden  %+v", 403, o.Payload)
}

func (o *FunctionsFetchFunctionExecutionsForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *FunctionsFetchFunctionExecutionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsFetchFunctionExecutionsNotFound creates a FunctionsFetchFunctionExecutionsNotFound with default headers values
func NewFunctionsFetchFunctionExecutionsNotFound() *FunctionsFetchFunctionExecutionsNotFound {
	return &FunctionsFetchFunctionExecutionsNotFound{}
}

/*FunctionsFetchFunctionExecutionsNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type FunctionsFetchFunctionExecutionsNotFound struct {
	Payload *models.CommonError
}

func (o *FunctionsFetchFunctionExecutionsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/functions/{function}/executions][%d] functionsFetchFunctionExecutionsNotFound  %+v", 404, o.Payload)
}

func (o *FunctionsFetchFunctionExecutionsNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *FunctionsFetchFunctionExecutionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsFetchFunctionExecutionsDefault creates a FunctionsFetchFunctionExecutionsDefault with default headers values
func NewFunctionsFetchFunctionExecutionsDefault(code int) *FunctionsFetchFunctionExecutionsDefault {
	return &FunctionsFetchFunctionExecutionsDefault{
		_statusCode: code,
	}
}

/*FunctionsFetchFunctionExecutionsDefault handles this case with default header values.

An unexpected error response
*/
type FunctionsFetchFunctionExecutionsDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the functions fetch function executions default response
func (o *FunctionsFetchFunctionExecutionsDefault) Code() int {
	return o._statusCode
}

func (o *FunctionsFetchFunctionExecutionsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}/functions/{function}/executions][%d] Functions_FetchFunctionExecutions default  %+v", o._statusCode, o.Payload)
}

func (o *FunctionsFetchFunctionExecutionsDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *FunctionsFetchFunctionExecutionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
