// Code generated by go-swagger; DO NOT EDIT.

package functions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// FunctionsCancelFunctionExecutionReader is a Reader for the FunctionsCancelFunctionExecution structure.
type FunctionsCancelFunctionExecutionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FunctionsCancelFunctionExecutionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFunctionsCancelFunctionExecutionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFunctionsCancelFunctionExecutionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFunctionsCancelFunctionExecutionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFunctionsCancelFunctionExecutionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewFunctionsCancelFunctionExecutionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFunctionsCancelFunctionExecutionOK creates a FunctionsCancelFunctionExecutionOK with default headers values
func NewFunctionsCancelFunctionExecutionOK() *FunctionsCancelFunctionExecutionOK {
	return &FunctionsCancelFunctionExecutionOK{}
}

/*FunctionsCancelFunctionExecutionOK handles this case with default header values.

A successful response.
*/
type FunctionsCancelFunctionExecutionOK struct {
	Payload models.StorageCancelFunctionExecutionReply
}

func (o *FunctionsCancelFunctionExecutionOK) Error() string {
	return fmt.Sprintf("[POST /v1/stacks/{stack_id}/executions/{run_id}/cancel][%d] functionsCancelFunctionExecutionOK  %+v", 200, o.Payload)
}

func (o *FunctionsCancelFunctionExecutionOK) GetPayload() models.StorageCancelFunctionExecutionReply {
	return o.Payload
}

func (o *FunctionsCancelFunctionExecutionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsCancelFunctionExecutionBadRequest creates a FunctionsCancelFunctionExecutionBadRequest with default headers values
func NewFunctionsCancelFunctionExecutionBadRequest() *FunctionsCancelFunctionExecutionBadRequest {
	return &FunctionsCancelFunctionExecutionBadRequest{}
}

/*FunctionsCancelFunctionExecutionBadRequest handles this case with default header values.

Validation error
*/
type FunctionsCancelFunctionExecutionBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *FunctionsCancelFunctionExecutionBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/stacks/{stack_id}/executions/{run_id}/cancel][%d] functionsCancelFunctionExecutionBadRequest  %+v", 400, o.Payload)
}

func (o *FunctionsCancelFunctionExecutionBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *FunctionsCancelFunctionExecutionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsCancelFunctionExecutionForbidden creates a FunctionsCancelFunctionExecutionForbidden with default headers values
func NewFunctionsCancelFunctionExecutionForbidden() *FunctionsCancelFunctionExecutionForbidden {
	return &FunctionsCancelFunctionExecutionForbidden{}
}

/*FunctionsCancelFunctionExecutionForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type FunctionsCancelFunctionExecutionForbidden struct {
	Payload *models.CommonError
}

func (o *FunctionsCancelFunctionExecutionForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/stacks/{stack_id}/executions/{run_id}/cancel][%d] functionsCancelFunctionExecutionForbidden  %+v", 403, o.Payload)
}

func (o *FunctionsCancelFunctionExecutionForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *FunctionsCancelFunctionExecutionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsCancelFunctionExecutionNotFound creates a FunctionsCancelFunctionExecutionNotFound with default headers values
func NewFunctionsCancelFunctionExecutionNotFound() *FunctionsCancelFunctionExecutionNotFound {
	return &FunctionsCancelFunctionExecutionNotFound{}
}

/*FunctionsCancelFunctionExecutionNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type FunctionsCancelFunctionExecutionNotFound struct {
	Payload *models.CommonError
}

func (o *FunctionsCancelFunctionExecutionNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/stacks/{stack_id}/executions/{run_id}/cancel][%d] functionsCancelFunctionExecutionNotFound  %+v", 404, o.Payload)
}

func (o *FunctionsCancelFunctionExecutionNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *FunctionsCancelFunctionExecutionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsCancelFunctionExecutionDefault creates a FunctionsCancelFunctionExecutionDefault with default headers values
func NewFunctionsCancelFunctionExecutionDefault(code int) *FunctionsCancelFunctionExecutionDefault {
	return &FunctionsCancelFunctionExecutionDefault{
		_statusCode: code,
	}
}

/*FunctionsCancelFunctionExecutionDefault handles this case with default header values.

An unexpected error response
*/
type FunctionsCancelFunctionExecutionDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the functions cancel function execution default response
func (o *FunctionsCancelFunctionExecutionDefault) Code() int {
	return o._statusCode
}

func (o *FunctionsCancelFunctionExecutionDefault) Error() string {
	return fmt.Sprintf("[POST /v1/stacks/{stack_id}/executions/{run_id}/cancel][%d] Functions_CancelFunctionExecution default  %+v", o._statusCode, o.Payload)
}

func (o *FunctionsCancelFunctionExecutionDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *FunctionsCancelFunctionExecutionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
