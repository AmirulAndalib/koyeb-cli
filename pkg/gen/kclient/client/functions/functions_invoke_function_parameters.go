// Code generated by go-swagger; DO NOT EDIT.

package functions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewFunctionsInvokeFunctionParams creates a new FunctionsInvokeFunctionParams object
// with the default values initialized.
func NewFunctionsInvokeFunctionParams() *FunctionsInvokeFunctionParams {
	var ()
	return &FunctionsInvokeFunctionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewFunctionsInvokeFunctionParamsWithTimeout creates a new FunctionsInvokeFunctionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewFunctionsInvokeFunctionParamsWithTimeout(timeout time.Duration) *FunctionsInvokeFunctionParams {
	var ()
	return &FunctionsInvokeFunctionParams{

		timeout: timeout,
	}
}

// NewFunctionsInvokeFunctionParamsWithContext creates a new FunctionsInvokeFunctionParams object
// with the default values initialized, and the ability to set a context for a request
func NewFunctionsInvokeFunctionParamsWithContext(ctx context.Context) *FunctionsInvokeFunctionParams {
	var ()
	return &FunctionsInvokeFunctionParams{

		Context: ctx,
	}
}

// NewFunctionsInvokeFunctionParamsWithHTTPClient creates a new FunctionsInvokeFunctionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewFunctionsInvokeFunctionParamsWithHTTPClient(client *http.Client) *FunctionsInvokeFunctionParams {
	var ()
	return &FunctionsInvokeFunctionParams{
		HTTPClient: client,
	}
}

/*FunctionsInvokeFunctionParams contains all the parameters to send to the API endpoint
for the functions invoke function operation typically these are written to a http.Request
*/
type FunctionsInvokeFunctionParams struct {

	/*Body*/
	Body interface{}
	/*Function*/
	Function string
	/*Sha*/
	Sha string
	/*StackID*/
	StackID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) WithTimeout(timeout time.Duration) *FunctionsInvokeFunctionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) WithContext(ctx context.Context) *FunctionsInvokeFunctionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) WithHTTPClient(client *http.Client) *FunctionsInvokeFunctionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) WithBody(body interface{}) *FunctionsInvokeFunctionParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) SetBody(body interface{}) {
	o.Body = body
}

// WithFunction adds the function to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) WithFunction(function string) *FunctionsInvokeFunctionParams {
	o.SetFunction(function)
	return o
}

// SetFunction adds the function to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) SetFunction(function string) {
	o.Function = function
}

// WithSha adds the sha to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) WithSha(sha string) *FunctionsInvokeFunctionParams {
	o.SetSha(sha)
	return o
}

// SetSha adds the sha to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) SetSha(sha string) {
	o.Sha = sha
}

// WithStackID adds the stackID to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) WithStackID(stackID string) *FunctionsInvokeFunctionParams {
	o.SetStackID(stackID)
	return o
}

// SetStackID adds the stackId to the functions invoke function params
func (o *FunctionsInvokeFunctionParams) SetStackID(stackID string) {
	o.StackID = stackID
}

// WriteToRequest writes these params to a swagger request
func (o *FunctionsInvokeFunctionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param function
	if err := r.SetPathParam("function", o.Function); err != nil {
		return err
	}

	// path param sha
	if err := r.SetPathParam("sha", o.Sha); err != nil {
		return err
	}

	// path param stack_id
	if err := r.SetPathParam("stack_id", o.StackID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
