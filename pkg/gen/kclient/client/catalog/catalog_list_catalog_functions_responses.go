// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// CatalogListCatalogFunctionsReader is a Reader for the CatalogListCatalogFunctions structure.
type CatalogListCatalogFunctionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogListCatalogFunctionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCatalogListCatalogFunctionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCatalogListCatalogFunctionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCatalogListCatalogFunctionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCatalogListCatalogFunctionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCatalogListCatalogFunctionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCatalogListCatalogFunctionsOK creates a CatalogListCatalogFunctionsOK with default headers values
func NewCatalogListCatalogFunctionsOK() *CatalogListCatalogFunctionsOK {
	return &CatalogListCatalogFunctionsOK{}
}

/*CatalogListCatalogFunctionsOK handles this case with default header values.

A successful response.
*/
type CatalogListCatalogFunctionsOK struct {
	Payload *models.StorageListCatalogFunctionsReply
}

func (o *CatalogListCatalogFunctionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/functions][%d] catalogListCatalogFunctionsOK  %+v", 200, o.Payload)
}

func (o *CatalogListCatalogFunctionsOK) GetPayload() *models.StorageListCatalogFunctionsReply {
	return o.Payload
}

func (o *CatalogListCatalogFunctionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageListCatalogFunctionsReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogListCatalogFunctionsBadRequest creates a CatalogListCatalogFunctionsBadRequest with default headers values
func NewCatalogListCatalogFunctionsBadRequest() *CatalogListCatalogFunctionsBadRequest {
	return &CatalogListCatalogFunctionsBadRequest{}
}

/*CatalogListCatalogFunctionsBadRequest handles this case with default header values.

Validation error
*/
type CatalogListCatalogFunctionsBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *CatalogListCatalogFunctionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/functions][%d] catalogListCatalogFunctionsBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogListCatalogFunctionsBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *CatalogListCatalogFunctionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogListCatalogFunctionsForbidden creates a CatalogListCatalogFunctionsForbidden with default headers values
func NewCatalogListCatalogFunctionsForbidden() *CatalogListCatalogFunctionsForbidden {
	return &CatalogListCatalogFunctionsForbidden{}
}

/*CatalogListCatalogFunctionsForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type CatalogListCatalogFunctionsForbidden struct {
	Payload *models.CommonError
}

func (o *CatalogListCatalogFunctionsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/functions][%d] catalogListCatalogFunctionsForbidden  %+v", 403, o.Payload)
}

func (o *CatalogListCatalogFunctionsForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *CatalogListCatalogFunctionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogListCatalogFunctionsNotFound creates a CatalogListCatalogFunctionsNotFound with default headers values
func NewCatalogListCatalogFunctionsNotFound() *CatalogListCatalogFunctionsNotFound {
	return &CatalogListCatalogFunctionsNotFound{}
}

/*CatalogListCatalogFunctionsNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type CatalogListCatalogFunctionsNotFound struct {
	Payload *models.CommonError
}

func (o *CatalogListCatalogFunctionsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/functions][%d] catalogListCatalogFunctionsNotFound  %+v", 404, o.Payload)
}

func (o *CatalogListCatalogFunctionsNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *CatalogListCatalogFunctionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogListCatalogFunctionsDefault creates a CatalogListCatalogFunctionsDefault with default headers values
func NewCatalogListCatalogFunctionsDefault(code int) *CatalogListCatalogFunctionsDefault {
	return &CatalogListCatalogFunctionsDefault{
		_statusCode: code,
	}
}

/*CatalogListCatalogFunctionsDefault handles this case with default header values.

An unexpected error response
*/
type CatalogListCatalogFunctionsDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the catalog list catalog functions default response
func (o *CatalogListCatalogFunctionsDefault) Code() int {
	return o._statusCode
}

func (o *CatalogListCatalogFunctionsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/functions][%d] Catalog_ListCatalogFunctions default  %+v", o._statusCode, o.Payload)
}

func (o *CatalogListCatalogFunctionsDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *CatalogListCatalogFunctionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
