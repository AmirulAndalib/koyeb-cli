// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// CatalogValidateYamlReader is a Reader for the CatalogValidateYaml structure.
type CatalogValidateYamlReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogValidateYamlReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCatalogValidateYamlOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCatalogValidateYamlBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCatalogValidateYamlForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCatalogValidateYamlNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCatalogValidateYamlDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCatalogValidateYamlOK creates a CatalogValidateYamlOK with default headers values
func NewCatalogValidateYamlOK() *CatalogValidateYamlOK {
	return &CatalogValidateYamlOK{}
}

/*CatalogValidateYamlOK handles this case with default header values.

A successful response.
*/
type CatalogValidateYamlOK struct {
	Payload models.StorageValidateYamlReply
}

func (o *CatalogValidateYamlOK) Error() string {
	return fmt.Sprintf("[POST /v1/validate_yaml][%d] catalogValidateYamlOK  %+v", 200, o.Payload)
}

func (o *CatalogValidateYamlOK) GetPayload() models.StorageValidateYamlReply {
	return o.Payload
}

func (o *CatalogValidateYamlOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogValidateYamlBadRequest creates a CatalogValidateYamlBadRequest with default headers values
func NewCatalogValidateYamlBadRequest() *CatalogValidateYamlBadRequest {
	return &CatalogValidateYamlBadRequest{}
}

/*CatalogValidateYamlBadRequest handles this case with default header values.

Validation error
*/
type CatalogValidateYamlBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *CatalogValidateYamlBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/validate_yaml][%d] catalogValidateYamlBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogValidateYamlBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *CatalogValidateYamlBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogValidateYamlForbidden creates a CatalogValidateYamlForbidden with default headers values
func NewCatalogValidateYamlForbidden() *CatalogValidateYamlForbidden {
	return &CatalogValidateYamlForbidden{}
}

/*CatalogValidateYamlForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type CatalogValidateYamlForbidden struct {
	Payload *models.CommonError
}

func (o *CatalogValidateYamlForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/validate_yaml][%d] catalogValidateYamlForbidden  %+v", 403, o.Payload)
}

func (o *CatalogValidateYamlForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *CatalogValidateYamlForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogValidateYamlNotFound creates a CatalogValidateYamlNotFound with default headers values
func NewCatalogValidateYamlNotFound() *CatalogValidateYamlNotFound {
	return &CatalogValidateYamlNotFound{}
}

/*CatalogValidateYamlNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type CatalogValidateYamlNotFound struct {
	Payload *models.CommonError
}

func (o *CatalogValidateYamlNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/validate_yaml][%d] catalogValidateYamlNotFound  %+v", 404, o.Payload)
}

func (o *CatalogValidateYamlNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *CatalogValidateYamlNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogValidateYamlDefault creates a CatalogValidateYamlDefault with default headers values
func NewCatalogValidateYamlDefault(code int) *CatalogValidateYamlDefault {
	return &CatalogValidateYamlDefault{
		_statusCode: code,
	}
}

/*CatalogValidateYamlDefault handles this case with default header values.

An unexpected error response
*/
type CatalogValidateYamlDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the catalog validate yaml default response
func (o *CatalogValidateYamlDefault) Code() int {
	return o._statusCode
}

func (o *CatalogValidateYamlDefault) Error() string {
	return fmt.Sprintf("[POST /v1/validate_yaml][%d] Catalog_ValidateYaml default  %+v", o._statusCode, o.Payload)
}

func (o *CatalogValidateYamlDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *CatalogValidateYamlDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
