// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// CatalogGetCatalogStackReader is a Reader for the CatalogGetCatalogStack structure.
type CatalogGetCatalogStackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogGetCatalogStackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCatalogGetCatalogStackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCatalogGetCatalogStackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCatalogGetCatalogStackForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCatalogGetCatalogStackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCatalogGetCatalogStackDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCatalogGetCatalogStackOK creates a CatalogGetCatalogStackOK with default headers values
func NewCatalogGetCatalogStackOK() *CatalogGetCatalogStackOK {
	return &CatalogGetCatalogStackOK{}
}

/*CatalogGetCatalogStackOK handles this case with default header values.

A successful response.
*/
type CatalogGetCatalogStackOK struct {
	Payload *models.StorageGetCatalogStackReply
}

func (o *CatalogGetCatalogStackOK) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stacks/{name}][%d] catalogGetCatalogStackOK  %+v", 200, o.Payload)
}

func (o *CatalogGetCatalogStackOK) GetPayload() *models.StorageGetCatalogStackReply {
	return o.Payload
}

func (o *CatalogGetCatalogStackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageGetCatalogStackReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogGetCatalogStackBadRequest creates a CatalogGetCatalogStackBadRequest with default headers values
func NewCatalogGetCatalogStackBadRequest() *CatalogGetCatalogStackBadRequest {
	return &CatalogGetCatalogStackBadRequest{}
}

/*CatalogGetCatalogStackBadRequest handles this case with default header values.

Validation error
*/
type CatalogGetCatalogStackBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *CatalogGetCatalogStackBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stacks/{name}][%d] catalogGetCatalogStackBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogGetCatalogStackBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *CatalogGetCatalogStackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogGetCatalogStackForbidden creates a CatalogGetCatalogStackForbidden with default headers values
func NewCatalogGetCatalogStackForbidden() *CatalogGetCatalogStackForbidden {
	return &CatalogGetCatalogStackForbidden{}
}

/*CatalogGetCatalogStackForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type CatalogGetCatalogStackForbidden struct {
	Payload *models.CommonError
}

func (o *CatalogGetCatalogStackForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stacks/{name}][%d] catalogGetCatalogStackForbidden  %+v", 403, o.Payload)
}

func (o *CatalogGetCatalogStackForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *CatalogGetCatalogStackForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogGetCatalogStackNotFound creates a CatalogGetCatalogStackNotFound with default headers values
func NewCatalogGetCatalogStackNotFound() *CatalogGetCatalogStackNotFound {
	return &CatalogGetCatalogStackNotFound{}
}

/*CatalogGetCatalogStackNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type CatalogGetCatalogStackNotFound struct {
	Payload *models.CommonError
}

func (o *CatalogGetCatalogStackNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stacks/{name}][%d] catalogGetCatalogStackNotFound  %+v", 404, o.Payload)
}

func (o *CatalogGetCatalogStackNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *CatalogGetCatalogStackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogGetCatalogStackDefault creates a CatalogGetCatalogStackDefault with default headers values
func NewCatalogGetCatalogStackDefault(code int) *CatalogGetCatalogStackDefault {
	return &CatalogGetCatalogStackDefault{
		_statusCode: code,
	}
}

/*CatalogGetCatalogStackDefault handles this case with default header values.

An unexpected error response
*/
type CatalogGetCatalogStackDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the catalog get catalog stack default response
func (o *CatalogGetCatalogStackDefault) Code() int {
	return o._statusCode
}

func (o *CatalogGetCatalogStackDefault) Error() string {
	return fmt.Sprintf("[GET /v1/catalog/stacks/{name}][%d] Catalog_GetCatalogStack default  %+v", o._statusCode, o.Payload)
}

func (o *CatalogGetCatalogStackDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *CatalogGetCatalogStackDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
