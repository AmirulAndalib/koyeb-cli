// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// StoreDeleteStoreReader is a Reader for the StoreDeleteStore structure.
type StoreDeleteStoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StoreDeleteStoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStoreDeleteStoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStoreDeleteStoreBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStoreDeleteStoreForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStoreDeleteStoreNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStoreDeleteStoreDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStoreDeleteStoreOK creates a StoreDeleteStoreOK with default headers values
func NewStoreDeleteStoreOK() *StoreDeleteStoreOK {
	return &StoreDeleteStoreOK{}
}

/*StoreDeleteStoreOK handles this case with default header values.

A successful response.
*/
type StoreDeleteStoreOK struct {
	Payload models.CommonEmpty
}

func (o *StoreDeleteStoreOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/stores/{id}][%d] storeDeleteStoreOK  %+v", 200, o.Payload)
}

func (o *StoreDeleteStoreOK) GetPayload() models.CommonEmpty {
	return o.Payload
}

func (o *StoreDeleteStoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreDeleteStoreBadRequest creates a StoreDeleteStoreBadRequest with default headers values
func NewStoreDeleteStoreBadRequest() *StoreDeleteStoreBadRequest {
	return &StoreDeleteStoreBadRequest{}
}

/*StoreDeleteStoreBadRequest handles this case with default header values.

Validation error
*/
type StoreDeleteStoreBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *StoreDeleteStoreBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/stores/{id}][%d] storeDeleteStoreBadRequest  %+v", 400, o.Payload)
}

func (o *StoreDeleteStoreBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *StoreDeleteStoreBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreDeleteStoreForbidden creates a StoreDeleteStoreForbidden with default headers values
func NewStoreDeleteStoreForbidden() *StoreDeleteStoreForbidden {
	return &StoreDeleteStoreForbidden{}
}

/*StoreDeleteStoreForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type StoreDeleteStoreForbidden struct {
	Payload *models.CommonError
}

func (o *StoreDeleteStoreForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/stores/{id}][%d] storeDeleteStoreForbidden  %+v", 403, o.Payload)
}

func (o *StoreDeleteStoreForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StoreDeleteStoreForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreDeleteStoreNotFound creates a StoreDeleteStoreNotFound with default headers values
func NewStoreDeleteStoreNotFound() *StoreDeleteStoreNotFound {
	return &StoreDeleteStoreNotFound{}
}

/*StoreDeleteStoreNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type StoreDeleteStoreNotFound struct {
	Payload *models.CommonError
}

func (o *StoreDeleteStoreNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/stores/{id}][%d] storeDeleteStoreNotFound  %+v", 404, o.Payload)
}

func (o *StoreDeleteStoreNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StoreDeleteStoreNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreDeleteStoreDefault creates a StoreDeleteStoreDefault with default headers values
func NewStoreDeleteStoreDefault(code int) *StoreDeleteStoreDefault {
	return &StoreDeleteStoreDefault{
		_statusCode: code,
	}
}

/*StoreDeleteStoreDefault handles this case with default header values.

An unexpected error response
*/
type StoreDeleteStoreDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the store delete store default response
func (o *StoreDeleteStoreDefault) Code() int {
	return o._statusCode
}

func (o *StoreDeleteStoreDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/stores/{id}][%d] store_DeleteStore default  %+v", o._statusCode, o.Payload)
}

func (o *StoreDeleteStoreDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *StoreDeleteStoreDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
