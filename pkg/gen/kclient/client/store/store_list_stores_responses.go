// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// StoreListStoresReader is a Reader for the StoreListStores structure.
type StoreListStoresReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StoreListStoresReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStoreListStoresOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStoreListStoresBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStoreListStoresForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStoreListStoresNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStoreListStoresDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStoreListStoresOK creates a StoreListStoresOK with default headers values
func NewStoreListStoresOK() *StoreListStoresOK {
	return &StoreListStoresOK{}
}

/*StoreListStoresOK handles this case with default header values.

A successful response.
*/
type StoreListStoresOK struct {
	Payload *models.StorageListStoresReply
}

func (o *StoreListStoresOK) Error() string {
	return fmt.Sprintf("[GET /v1/stores][%d] storeListStoresOK  %+v", 200, o.Payload)
}

func (o *StoreListStoresOK) GetPayload() *models.StorageListStoresReply {
	return o.Payload
}

func (o *StoreListStoresOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageListStoresReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreListStoresBadRequest creates a StoreListStoresBadRequest with default headers values
func NewStoreListStoresBadRequest() *StoreListStoresBadRequest {
	return &StoreListStoresBadRequest{}
}

/*StoreListStoresBadRequest handles this case with default header values.

Validation error
*/
type StoreListStoresBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *StoreListStoresBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/stores][%d] storeListStoresBadRequest  %+v", 400, o.Payload)
}

func (o *StoreListStoresBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *StoreListStoresBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreListStoresForbidden creates a StoreListStoresForbidden with default headers values
func NewStoreListStoresForbidden() *StoreListStoresForbidden {
	return &StoreListStoresForbidden{}
}

/*StoreListStoresForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type StoreListStoresForbidden struct {
	Payload *models.CommonError
}

func (o *StoreListStoresForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/stores][%d] storeListStoresForbidden  %+v", 403, o.Payload)
}

func (o *StoreListStoresForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StoreListStoresForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreListStoresNotFound creates a StoreListStoresNotFound with default headers values
func NewStoreListStoresNotFound() *StoreListStoresNotFound {
	return &StoreListStoresNotFound{}
}

/*StoreListStoresNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type StoreListStoresNotFound struct {
	Payload *models.CommonError
}

func (o *StoreListStoresNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/stores][%d] storeListStoresNotFound  %+v", 404, o.Payload)
}

func (o *StoreListStoresNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StoreListStoresNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreListStoresDefault creates a StoreListStoresDefault with default headers values
func NewStoreListStoresDefault(code int) *StoreListStoresDefault {
	return &StoreListStoresDefault{
		_statusCode: code,
	}
}

/*StoreListStoresDefault handles this case with default header values.

An unexpected error response
*/
type StoreListStoresDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the store list stores default response
func (o *StoreListStoresDefault) Code() int {
	return o._statusCode
}

func (o *StoreListStoresDefault) Error() string {
	return fmt.Sprintf("[GET /v1/stores][%d] store_ListStores default  %+v", o._statusCode, o.Payload)
}

func (o *StoreListStoresDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *StoreListStoresDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
