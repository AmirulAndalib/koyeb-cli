// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// StoreCheckStoreStatusReader is a Reader for the StoreCheckStoreStatus structure.
type StoreCheckStoreStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StoreCheckStoreStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStoreCheckStoreStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStoreCheckStoreStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStoreCheckStoreStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStoreCheckStoreStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStoreCheckStoreStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStoreCheckStoreStatusOK creates a StoreCheckStoreStatusOK with default headers values
func NewStoreCheckStoreStatusOK() *StoreCheckStoreStatusOK {
	return &StoreCheckStoreStatusOK{}
}

/*StoreCheckStoreStatusOK handles this case with default header values.

A successful response.
*/
type StoreCheckStoreStatusOK struct {
	Payload models.CommonEmpty
}

func (o *StoreCheckStoreStatusOK) Error() string {
	return fmt.Sprintf("[POST /v1/stores/{id}/status][%d] storeCheckStoreStatusOK  %+v", 200, o.Payload)
}

func (o *StoreCheckStoreStatusOK) GetPayload() models.CommonEmpty {
	return o.Payload
}

func (o *StoreCheckStoreStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreCheckStoreStatusBadRequest creates a StoreCheckStoreStatusBadRequest with default headers values
func NewStoreCheckStoreStatusBadRequest() *StoreCheckStoreStatusBadRequest {
	return &StoreCheckStoreStatusBadRequest{}
}

/*StoreCheckStoreStatusBadRequest handles this case with default header values.

Validation error
*/
type StoreCheckStoreStatusBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *StoreCheckStoreStatusBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/stores/{id}/status][%d] storeCheckStoreStatusBadRequest  %+v", 400, o.Payload)
}

func (o *StoreCheckStoreStatusBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *StoreCheckStoreStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreCheckStoreStatusForbidden creates a StoreCheckStoreStatusForbidden with default headers values
func NewStoreCheckStoreStatusForbidden() *StoreCheckStoreStatusForbidden {
	return &StoreCheckStoreStatusForbidden{}
}

/*StoreCheckStoreStatusForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type StoreCheckStoreStatusForbidden struct {
	Payload *models.CommonError
}

func (o *StoreCheckStoreStatusForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/stores/{id}/status][%d] storeCheckStoreStatusForbidden  %+v", 403, o.Payload)
}

func (o *StoreCheckStoreStatusForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StoreCheckStoreStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreCheckStoreStatusNotFound creates a StoreCheckStoreStatusNotFound with default headers values
func NewStoreCheckStoreStatusNotFound() *StoreCheckStoreStatusNotFound {
	return &StoreCheckStoreStatusNotFound{}
}

/*StoreCheckStoreStatusNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type StoreCheckStoreStatusNotFound struct {
	Payload *models.CommonError
}

func (o *StoreCheckStoreStatusNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/stores/{id}/status][%d] storeCheckStoreStatusNotFound  %+v", 404, o.Payload)
}

func (o *StoreCheckStoreStatusNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StoreCheckStoreStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreCheckStoreStatusDefault creates a StoreCheckStoreStatusDefault with default headers values
func NewStoreCheckStoreStatusDefault(code int) *StoreCheckStoreStatusDefault {
	return &StoreCheckStoreStatusDefault{
		_statusCode: code,
	}
}

/*StoreCheckStoreStatusDefault handles this case with default header values.

An unexpected error response
*/
type StoreCheckStoreStatusDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the store check store status default response
func (o *StoreCheckStoreStatusDefault) Code() int {
	return o._statusCode
}

func (o *StoreCheckStoreStatusDefault) Error() string {
	return fmt.Sprintf("[POST /v1/stores/{id}/status][%d] store_CheckStoreStatus default  %+v", o._statusCode, o.Payload)
}

func (o *StoreCheckStoreStatusDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *StoreCheckStoreStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
