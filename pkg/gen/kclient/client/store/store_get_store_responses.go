// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// StoreGetStoreReader is a Reader for the StoreGetStore structure.
type StoreGetStoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StoreGetStoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStoreGetStoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStoreGetStoreBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStoreGetStoreForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStoreGetStoreNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStoreGetStoreDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStoreGetStoreOK creates a StoreGetStoreOK with default headers values
func NewStoreGetStoreOK() *StoreGetStoreOK {
	return &StoreGetStoreOK{}
}

/*StoreGetStoreOK handles this case with default header values.

A successful response.
*/
type StoreGetStoreOK struct {
	Payload *models.StorageStoreReply
}

func (o *StoreGetStoreOK) Error() string {
	return fmt.Sprintf("[GET /v1/stores/{id}][%d] storeGetStoreOK  %+v", 200, o.Payload)
}

func (o *StoreGetStoreOK) GetPayload() *models.StorageStoreReply {
	return o.Payload
}

func (o *StoreGetStoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageStoreReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreGetStoreBadRequest creates a StoreGetStoreBadRequest with default headers values
func NewStoreGetStoreBadRequest() *StoreGetStoreBadRequest {
	return &StoreGetStoreBadRequest{}
}

/*StoreGetStoreBadRequest handles this case with default header values.

Validation error
*/
type StoreGetStoreBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *StoreGetStoreBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/stores/{id}][%d] storeGetStoreBadRequest  %+v", 400, o.Payload)
}

func (o *StoreGetStoreBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *StoreGetStoreBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreGetStoreForbidden creates a StoreGetStoreForbidden with default headers values
func NewStoreGetStoreForbidden() *StoreGetStoreForbidden {
	return &StoreGetStoreForbidden{}
}

/*StoreGetStoreForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type StoreGetStoreForbidden struct {
	Payload *models.CommonError
}

func (o *StoreGetStoreForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/stores/{id}][%d] storeGetStoreForbidden  %+v", 403, o.Payload)
}

func (o *StoreGetStoreForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StoreGetStoreForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreGetStoreNotFound creates a StoreGetStoreNotFound with default headers values
func NewStoreGetStoreNotFound() *StoreGetStoreNotFound {
	return &StoreGetStoreNotFound{}
}

/*StoreGetStoreNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type StoreGetStoreNotFound struct {
	Payload *models.CommonError
}

func (o *StoreGetStoreNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/stores/{id}][%d] storeGetStoreNotFound  %+v", 404, o.Payload)
}

func (o *StoreGetStoreNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StoreGetStoreNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreGetStoreDefault creates a StoreGetStoreDefault with default headers values
func NewStoreGetStoreDefault(code int) *StoreGetStoreDefault {
	return &StoreGetStoreDefault{
		_statusCode: code,
	}
}

/*StoreGetStoreDefault handles this case with default header values.

An unexpected error response
*/
type StoreGetStoreDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the store get store default response
func (o *StoreGetStoreDefault) Code() int {
	return o._statusCode
}

func (o *StoreGetStoreDefault) Error() string {
	return fmt.Sprintf("[GET /v1/stores/{id}][%d] store_GetStore default  %+v", o._statusCode, o.Payload)
}

func (o *StoreGetStoreDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *StoreGetStoreDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
