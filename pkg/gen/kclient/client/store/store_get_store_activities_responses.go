// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// StoreGetStoreActivitiesReader is a Reader for the StoreGetStoreActivities structure.
type StoreGetStoreActivitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StoreGetStoreActivitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStoreGetStoreActivitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStoreGetStoreActivitiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStoreGetStoreActivitiesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStoreGetStoreActivitiesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStoreGetStoreActivitiesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStoreGetStoreActivitiesOK creates a StoreGetStoreActivitiesOK with default headers values
func NewStoreGetStoreActivitiesOK() *StoreGetStoreActivitiesOK {
	return &StoreGetStoreActivitiesOK{}
}

/*StoreGetStoreActivitiesOK handles this case with default header values.

A successful response.
*/
type StoreGetStoreActivitiesOK struct {
	Payload *models.ActivityActivityList
}

func (o *StoreGetStoreActivitiesOK) Error() string {
	return fmt.Sprintf("[GET /v1/stores/{id}/activities][%d] storeGetStoreActivitiesOK  %+v", 200, o.Payload)
}

func (o *StoreGetStoreActivitiesOK) GetPayload() *models.ActivityActivityList {
	return o.Payload
}

func (o *StoreGetStoreActivitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ActivityActivityList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreGetStoreActivitiesBadRequest creates a StoreGetStoreActivitiesBadRequest with default headers values
func NewStoreGetStoreActivitiesBadRequest() *StoreGetStoreActivitiesBadRequest {
	return &StoreGetStoreActivitiesBadRequest{}
}

/*StoreGetStoreActivitiesBadRequest handles this case with default header values.

Validation error
*/
type StoreGetStoreActivitiesBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *StoreGetStoreActivitiesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/stores/{id}/activities][%d] storeGetStoreActivitiesBadRequest  %+v", 400, o.Payload)
}

func (o *StoreGetStoreActivitiesBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *StoreGetStoreActivitiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreGetStoreActivitiesForbidden creates a StoreGetStoreActivitiesForbidden with default headers values
func NewStoreGetStoreActivitiesForbidden() *StoreGetStoreActivitiesForbidden {
	return &StoreGetStoreActivitiesForbidden{}
}

/*StoreGetStoreActivitiesForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type StoreGetStoreActivitiesForbidden struct {
	Payload *models.CommonError
}

func (o *StoreGetStoreActivitiesForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/stores/{id}/activities][%d] storeGetStoreActivitiesForbidden  %+v", 403, o.Payload)
}

func (o *StoreGetStoreActivitiesForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StoreGetStoreActivitiesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreGetStoreActivitiesNotFound creates a StoreGetStoreActivitiesNotFound with default headers values
func NewStoreGetStoreActivitiesNotFound() *StoreGetStoreActivitiesNotFound {
	return &StoreGetStoreActivitiesNotFound{}
}

/*StoreGetStoreActivitiesNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type StoreGetStoreActivitiesNotFound struct {
	Payload *models.CommonError
}

func (o *StoreGetStoreActivitiesNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/stores/{id}/activities][%d] storeGetStoreActivitiesNotFound  %+v", 404, o.Payload)
}

func (o *StoreGetStoreActivitiesNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StoreGetStoreActivitiesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreGetStoreActivitiesDefault creates a StoreGetStoreActivitiesDefault with default headers values
func NewStoreGetStoreActivitiesDefault(code int) *StoreGetStoreActivitiesDefault {
	return &StoreGetStoreActivitiesDefault{
		_statusCode: code,
	}
}

/*StoreGetStoreActivitiesDefault handles this case with default header values.

An unexpected error response
*/
type StoreGetStoreActivitiesDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the store get store activities default response
func (o *StoreGetStoreActivitiesDefault) Code() int {
	return o._statusCode
}

func (o *StoreGetStoreActivitiesDefault) Error() string {
	return fmt.Sprintf("[GET /v1/stores/{id}/activities][%d] store_GetStoreActivities default  %+v", o._statusCode, o.Payload)
}

func (o *StoreGetStoreActivitiesDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *StoreGetStoreActivitiesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
