// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// StoreNewStoreReader is a Reader for the StoreNewStore structure.
type StoreNewStoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StoreNewStoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStoreNewStoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStoreNewStoreBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStoreNewStoreForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStoreNewStoreNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStoreNewStoreDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStoreNewStoreOK creates a StoreNewStoreOK with default headers values
func NewStoreNewStoreOK() *StoreNewStoreOK {
	return &StoreNewStoreOK{}
}

/*StoreNewStoreOK handles this case with default header values.

A successful response.
*/
type StoreNewStoreOK struct {
	Payload *models.StorageStoreReply
}

func (o *StoreNewStoreOK) Error() string {
	return fmt.Sprintf("[POST /v1/stores][%d] storeNewStoreOK  %+v", 200, o.Payload)
}

func (o *StoreNewStoreOK) GetPayload() *models.StorageStoreReply {
	return o.Payload
}

func (o *StoreNewStoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageStoreReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreNewStoreBadRequest creates a StoreNewStoreBadRequest with default headers values
func NewStoreNewStoreBadRequest() *StoreNewStoreBadRequest {
	return &StoreNewStoreBadRequest{}
}

/*StoreNewStoreBadRequest handles this case with default header values.

Validation error
*/
type StoreNewStoreBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *StoreNewStoreBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/stores][%d] storeNewStoreBadRequest  %+v", 400, o.Payload)
}

func (o *StoreNewStoreBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *StoreNewStoreBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreNewStoreForbidden creates a StoreNewStoreForbidden with default headers values
func NewStoreNewStoreForbidden() *StoreNewStoreForbidden {
	return &StoreNewStoreForbidden{}
}

/*StoreNewStoreForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type StoreNewStoreForbidden struct {
	Payload *models.CommonError
}

func (o *StoreNewStoreForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/stores][%d] storeNewStoreForbidden  %+v", 403, o.Payload)
}

func (o *StoreNewStoreForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StoreNewStoreForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreNewStoreNotFound creates a StoreNewStoreNotFound with default headers values
func NewStoreNewStoreNotFound() *StoreNewStoreNotFound {
	return &StoreNewStoreNotFound{}
}

/*StoreNewStoreNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type StoreNewStoreNotFound struct {
	Payload *models.CommonError
}

func (o *StoreNewStoreNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/stores][%d] storeNewStoreNotFound  %+v", 404, o.Payload)
}

func (o *StoreNewStoreNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StoreNewStoreNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStoreNewStoreDefault creates a StoreNewStoreDefault with default headers values
func NewStoreNewStoreDefault(code int) *StoreNewStoreDefault {
	return &StoreNewStoreDefault{
		_statusCode: code,
	}
}

/*StoreNewStoreDefault handles this case with default header values.

An unexpected error response
*/
type StoreNewStoreDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the store new store default response
func (o *StoreNewStoreDefault) Code() int {
	return o._statusCode
}

func (o *StoreNewStoreDefault) Error() string {
	return fmt.Sprintf("[POST /v1/stores][%d] store_NewStore default  %+v", o._statusCode, o.Payload)
}

func (o *StoreNewStoreDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *StoreNewStoreDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
