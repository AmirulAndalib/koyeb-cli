// Code generated by go-swagger; DO NOT EDIT.

package session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// SessionPasswordlessLoginReader is a Reader for the SessionPasswordlessLogin structure.
type SessionPasswordlessLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SessionPasswordlessLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSessionPasswordlessLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSessionPasswordlessLoginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSessionPasswordlessLoginForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSessionPasswordlessLoginNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSessionPasswordlessLoginDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSessionPasswordlessLoginOK creates a SessionPasswordlessLoginOK with default headers values
func NewSessionPasswordlessLoginOK() *SessionPasswordlessLoginOK {
	return &SessionPasswordlessLoginOK{}
}

/*SessionPasswordlessLoginOK handles this case with default header values.

A successful response.
*/
type SessionPasswordlessLoginOK struct {
	Payload models.AccountPasswordlessLoginReply
}

func (o *SessionPasswordlessLoginOK) Error() string {
	return fmt.Sprintf("[POST /v1/account/passwordless_login][%d] sessionPasswordlessLoginOK  %+v", 200, o.Payload)
}

func (o *SessionPasswordlessLoginOK) GetPayload() models.AccountPasswordlessLoginReply {
	return o.Payload
}

func (o *SessionPasswordlessLoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSessionPasswordlessLoginBadRequest creates a SessionPasswordlessLoginBadRequest with default headers values
func NewSessionPasswordlessLoginBadRequest() *SessionPasswordlessLoginBadRequest {
	return &SessionPasswordlessLoginBadRequest{}
}

/*SessionPasswordlessLoginBadRequest handles this case with default header values.

Validation error
*/
type SessionPasswordlessLoginBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *SessionPasswordlessLoginBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/account/passwordless_login][%d] sessionPasswordlessLoginBadRequest  %+v", 400, o.Payload)
}

func (o *SessionPasswordlessLoginBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *SessionPasswordlessLoginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSessionPasswordlessLoginForbidden creates a SessionPasswordlessLoginForbidden with default headers values
func NewSessionPasswordlessLoginForbidden() *SessionPasswordlessLoginForbidden {
	return &SessionPasswordlessLoginForbidden{}
}

/*SessionPasswordlessLoginForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type SessionPasswordlessLoginForbidden struct {
	Payload *models.CommonError
}

func (o *SessionPasswordlessLoginForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/account/passwordless_login][%d] sessionPasswordlessLoginForbidden  %+v", 403, o.Payload)
}

func (o *SessionPasswordlessLoginForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *SessionPasswordlessLoginForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSessionPasswordlessLoginNotFound creates a SessionPasswordlessLoginNotFound with default headers values
func NewSessionPasswordlessLoginNotFound() *SessionPasswordlessLoginNotFound {
	return &SessionPasswordlessLoginNotFound{}
}

/*SessionPasswordlessLoginNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type SessionPasswordlessLoginNotFound struct {
	Payload *models.CommonError
}

func (o *SessionPasswordlessLoginNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/account/passwordless_login][%d] sessionPasswordlessLoginNotFound  %+v", 404, o.Payload)
}

func (o *SessionPasswordlessLoginNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *SessionPasswordlessLoginNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSessionPasswordlessLoginDefault creates a SessionPasswordlessLoginDefault with default headers values
func NewSessionPasswordlessLoginDefault(code int) *SessionPasswordlessLoginDefault {
	return &SessionPasswordlessLoginDefault{
		_statusCode: code,
	}
}

/*SessionPasswordlessLoginDefault handles this case with default header values.

An unexpected error response
*/
type SessionPasswordlessLoginDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the session passwordless login default response
func (o *SessionPasswordlessLoginDefault) Code() int {
	return o._statusCode
}

func (o *SessionPasswordlessLoginDefault) Error() string {
	return fmt.Sprintf("[POST /v1/account/passwordless_login][%d] session_PasswordlessLogin default  %+v", o._statusCode, o.Payload)
}

func (o *SessionPasswordlessLoginDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *SessionPasswordlessLoginDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
