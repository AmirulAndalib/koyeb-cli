// Code generated by go-swagger; DO NOT EDIT.

package s3_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// S3CredentialsUpdateS3Credential2Reader is a Reader for the S3CredentialsUpdateS3Credential2 structure.
type S3CredentialsUpdateS3Credential2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *S3CredentialsUpdateS3Credential2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewS3CredentialsUpdateS3Credential2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewS3CredentialsUpdateS3Credential2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewS3CredentialsUpdateS3Credential2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewS3CredentialsUpdateS3Credential2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewS3CredentialsUpdateS3Credential2Default(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewS3CredentialsUpdateS3Credential2OK creates a S3CredentialsUpdateS3Credential2OK with default headers values
func NewS3CredentialsUpdateS3Credential2OK() *S3CredentialsUpdateS3Credential2OK {
	return &S3CredentialsUpdateS3Credential2OK{}
}

/*S3CredentialsUpdateS3Credential2OK handles this case with default header values.

A successful response.
*/
type S3CredentialsUpdateS3Credential2OK struct {
	Payload *models.AccountS3CredentialReply
}

func (o *S3CredentialsUpdateS3Credential2OK) Error() string {
	return fmt.Sprintf("[PATCH /v1/s3_credentials/{id}][%d] s3CredentialsUpdateS3Credential2OK  %+v", 200, o.Payload)
}

func (o *S3CredentialsUpdateS3Credential2OK) GetPayload() *models.AccountS3CredentialReply {
	return o.Payload
}

func (o *S3CredentialsUpdateS3Credential2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountS3CredentialReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsUpdateS3Credential2BadRequest creates a S3CredentialsUpdateS3Credential2BadRequest with default headers values
func NewS3CredentialsUpdateS3Credential2BadRequest() *S3CredentialsUpdateS3Credential2BadRequest {
	return &S3CredentialsUpdateS3Credential2BadRequest{}
}

/*S3CredentialsUpdateS3Credential2BadRequest handles this case with default header values.

Validation error
*/
type S3CredentialsUpdateS3Credential2BadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *S3CredentialsUpdateS3Credential2BadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/s3_credentials/{id}][%d] s3CredentialsUpdateS3Credential2BadRequest  %+v", 400, o.Payload)
}

func (o *S3CredentialsUpdateS3Credential2BadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *S3CredentialsUpdateS3Credential2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsUpdateS3Credential2Forbidden creates a S3CredentialsUpdateS3Credential2Forbidden with default headers values
func NewS3CredentialsUpdateS3Credential2Forbidden() *S3CredentialsUpdateS3Credential2Forbidden {
	return &S3CredentialsUpdateS3Credential2Forbidden{}
}

/*S3CredentialsUpdateS3Credential2Forbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type S3CredentialsUpdateS3Credential2Forbidden struct {
	Payload *models.CommonError
}

func (o *S3CredentialsUpdateS3Credential2Forbidden) Error() string {
	return fmt.Sprintf("[PATCH /v1/s3_credentials/{id}][%d] s3CredentialsUpdateS3Credential2Forbidden  %+v", 403, o.Payload)
}

func (o *S3CredentialsUpdateS3Credential2Forbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *S3CredentialsUpdateS3Credential2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsUpdateS3Credential2NotFound creates a S3CredentialsUpdateS3Credential2NotFound with default headers values
func NewS3CredentialsUpdateS3Credential2NotFound() *S3CredentialsUpdateS3Credential2NotFound {
	return &S3CredentialsUpdateS3Credential2NotFound{}
}

/*S3CredentialsUpdateS3Credential2NotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type S3CredentialsUpdateS3Credential2NotFound struct {
	Payload *models.CommonError
}

func (o *S3CredentialsUpdateS3Credential2NotFound) Error() string {
	return fmt.Sprintf("[PATCH /v1/s3_credentials/{id}][%d] s3CredentialsUpdateS3Credential2NotFound  %+v", 404, o.Payload)
}

func (o *S3CredentialsUpdateS3Credential2NotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *S3CredentialsUpdateS3Credential2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsUpdateS3Credential2Default creates a S3CredentialsUpdateS3Credential2Default with default headers values
func NewS3CredentialsUpdateS3Credential2Default(code int) *S3CredentialsUpdateS3Credential2Default {
	return &S3CredentialsUpdateS3Credential2Default{
		_statusCode: code,
	}
}

/*S3CredentialsUpdateS3Credential2Default handles this case with default header values.

An unexpected error response
*/
type S3CredentialsUpdateS3Credential2Default struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the s3 credentials update s3 credential2 default response
func (o *S3CredentialsUpdateS3Credential2Default) Code() int {
	return o._statusCode
}

func (o *S3CredentialsUpdateS3Credential2Default) Error() string {
	return fmt.Sprintf("[PATCH /v1/s3_credentials/{id}][%d] s3Credentials_UpdateS3Credential2 default  %+v", o._statusCode, o.Payload)
}

func (o *S3CredentialsUpdateS3Credential2Default) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *S3CredentialsUpdateS3Credential2Default) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
