// Code generated by go-swagger; DO NOT EDIT.

package s3_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// S3CredentialsListS3CredentialsReader is a Reader for the S3CredentialsListS3Credentials structure.
type S3CredentialsListS3CredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *S3CredentialsListS3CredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewS3CredentialsListS3CredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewS3CredentialsListS3CredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewS3CredentialsListS3CredentialsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewS3CredentialsListS3CredentialsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewS3CredentialsListS3CredentialsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewS3CredentialsListS3CredentialsOK creates a S3CredentialsListS3CredentialsOK with default headers values
func NewS3CredentialsListS3CredentialsOK() *S3CredentialsListS3CredentialsOK {
	return &S3CredentialsListS3CredentialsOK{}
}

/*S3CredentialsListS3CredentialsOK handles this case with default header values.

A successful response.
*/
type S3CredentialsListS3CredentialsOK struct {
	Payload *models.AccountListS3CredentialsReply
}

func (o *S3CredentialsListS3CredentialsOK) Error() string {
	return fmt.Sprintf("[GET /v1/s3_credentials][%d] s3CredentialsListS3CredentialsOK  %+v", 200, o.Payload)
}

func (o *S3CredentialsListS3CredentialsOK) GetPayload() *models.AccountListS3CredentialsReply {
	return o.Payload
}

func (o *S3CredentialsListS3CredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountListS3CredentialsReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsListS3CredentialsBadRequest creates a S3CredentialsListS3CredentialsBadRequest with default headers values
func NewS3CredentialsListS3CredentialsBadRequest() *S3CredentialsListS3CredentialsBadRequest {
	return &S3CredentialsListS3CredentialsBadRequest{}
}

/*S3CredentialsListS3CredentialsBadRequest handles this case with default header values.

Validation error
*/
type S3CredentialsListS3CredentialsBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *S3CredentialsListS3CredentialsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/s3_credentials][%d] s3CredentialsListS3CredentialsBadRequest  %+v", 400, o.Payload)
}

func (o *S3CredentialsListS3CredentialsBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *S3CredentialsListS3CredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsListS3CredentialsForbidden creates a S3CredentialsListS3CredentialsForbidden with default headers values
func NewS3CredentialsListS3CredentialsForbidden() *S3CredentialsListS3CredentialsForbidden {
	return &S3CredentialsListS3CredentialsForbidden{}
}

/*S3CredentialsListS3CredentialsForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type S3CredentialsListS3CredentialsForbidden struct {
	Payload *models.CommonError
}

func (o *S3CredentialsListS3CredentialsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/s3_credentials][%d] s3CredentialsListS3CredentialsForbidden  %+v", 403, o.Payload)
}

func (o *S3CredentialsListS3CredentialsForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *S3CredentialsListS3CredentialsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsListS3CredentialsNotFound creates a S3CredentialsListS3CredentialsNotFound with default headers values
func NewS3CredentialsListS3CredentialsNotFound() *S3CredentialsListS3CredentialsNotFound {
	return &S3CredentialsListS3CredentialsNotFound{}
}

/*S3CredentialsListS3CredentialsNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type S3CredentialsListS3CredentialsNotFound struct {
	Payload *models.CommonError
}

func (o *S3CredentialsListS3CredentialsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/s3_credentials][%d] s3CredentialsListS3CredentialsNotFound  %+v", 404, o.Payload)
}

func (o *S3CredentialsListS3CredentialsNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *S3CredentialsListS3CredentialsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsListS3CredentialsDefault creates a S3CredentialsListS3CredentialsDefault with default headers values
func NewS3CredentialsListS3CredentialsDefault(code int) *S3CredentialsListS3CredentialsDefault {
	return &S3CredentialsListS3CredentialsDefault{
		_statusCode: code,
	}
}

/*S3CredentialsListS3CredentialsDefault handles this case with default header values.

An unexpected error response
*/
type S3CredentialsListS3CredentialsDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the s3 credentials list s3 credentials default response
func (o *S3CredentialsListS3CredentialsDefault) Code() int {
	return o._statusCode
}

func (o *S3CredentialsListS3CredentialsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/s3_credentials][%d] s3Credentials_ListS3Credentials default  %+v", o._statusCode, o.Payload)
}

func (o *S3CredentialsListS3CredentialsDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *S3CredentialsListS3CredentialsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
