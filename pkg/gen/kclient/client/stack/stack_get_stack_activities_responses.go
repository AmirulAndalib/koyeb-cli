// Code generated by go-swagger; DO NOT EDIT.

package stack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// StackGetStackActivitiesReader is a Reader for the StackGetStackActivities structure.
type StackGetStackActivitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StackGetStackActivitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStackGetStackActivitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStackGetStackActivitiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStackGetStackActivitiesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStackGetStackActivitiesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStackGetStackActivitiesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStackGetStackActivitiesOK creates a StackGetStackActivitiesOK with default headers values
func NewStackGetStackActivitiesOK() *StackGetStackActivitiesOK {
	return &StackGetStackActivitiesOK{}
}

/*StackGetStackActivitiesOK handles this case with default header values.

A successful response.
*/
type StackGetStackActivitiesOK struct {
	Payload *models.ActivityActivityList
}

func (o *StackGetStackActivitiesOK) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{id}/activities][%d] stackGetStackActivitiesOK  %+v", 200, o.Payload)
}

func (o *StackGetStackActivitiesOK) GetPayload() *models.ActivityActivityList {
	return o.Payload
}

func (o *StackGetStackActivitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ActivityActivityList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackGetStackActivitiesBadRequest creates a StackGetStackActivitiesBadRequest with default headers values
func NewStackGetStackActivitiesBadRequest() *StackGetStackActivitiesBadRequest {
	return &StackGetStackActivitiesBadRequest{}
}

/*StackGetStackActivitiesBadRequest handles this case with default header values.

Validation error
*/
type StackGetStackActivitiesBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *StackGetStackActivitiesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{id}/activities][%d] stackGetStackActivitiesBadRequest  %+v", 400, o.Payload)
}

func (o *StackGetStackActivitiesBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *StackGetStackActivitiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackGetStackActivitiesForbidden creates a StackGetStackActivitiesForbidden with default headers values
func NewStackGetStackActivitiesForbidden() *StackGetStackActivitiesForbidden {
	return &StackGetStackActivitiesForbidden{}
}

/*StackGetStackActivitiesForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type StackGetStackActivitiesForbidden struct {
	Payload *models.CommonError
}

func (o *StackGetStackActivitiesForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{id}/activities][%d] stackGetStackActivitiesForbidden  %+v", 403, o.Payload)
}

func (o *StackGetStackActivitiesForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StackGetStackActivitiesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackGetStackActivitiesNotFound creates a StackGetStackActivitiesNotFound with default headers values
func NewStackGetStackActivitiesNotFound() *StackGetStackActivitiesNotFound {
	return &StackGetStackActivitiesNotFound{}
}

/*StackGetStackActivitiesNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type StackGetStackActivitiesNotFound struct {
	Payload *models.CommonError
}

func (o *StackGetStackActivitiesNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{id}/activities][%d] stackGetStackActivitiesNotFound  %+v", 404, o.Payload)
}

func (o *StackGetStackActivitiesNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StackGetStackActivitiesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackGetStackActivitiesDefault creates a StackGetStackActivitiesDefault with default headers values
func NewStackGetStackActivitiesDefault(code int) *StackGetStackActivitiesDefault {
	return &StackGetStackActivitiesDefault{
		_statusCode: code,
	}
}

/*StackGetStackActivitiesDefault handles this case with default header values.

An unexpected error response
*/
type StackGetStackActivitiesDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the stack get stack activities default response
func (o *StackGetStackActivitiesDefault) Code() int {
	return o._statusCode
}

func (o *StackGetStackActivitiesDefault) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{id}/activities][%d] stack_GetStackActivities default  %+v", o._statusCode, o.Payload)
}

func (o *StackGetStackActivitiesDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *StackGetStackActivitiesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
