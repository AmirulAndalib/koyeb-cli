// Code generated by go-swagger; DO NOT EDIT.

package stack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// StackRetryBuildReader is a Reader for the StackRetryBuild structure.
type StackRetryBuildReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StackRetryBuildReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStackRetryBuildOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStackRetryBuildBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStackRetryBuildForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStackRetryBuildNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStackRetryBuildDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStackRetryBuildOK creates a StackRetryBuildOK with default headers values
func NewStackRetryBuildOK() *StackRetryBuildOK {
	return &StackRetryBuildOK{}
}

/*StackRetryBuildOK handles this case with default header values.

A successful response.
*/
type StackRetryBuildOK struct {
	Payload models.StorageRetryBuildReply
}

func (o *StackRetryBuildOK) Error() string {
	return fmt.Sprintf("[POST /v1/stacks/{stack_id}/revisions/{sha}/build/retrigger][%d] stackRetryBuildOK  %+v", 200, o.Payload)
}

func (o *StackRetryBuildOK) GetPayload() models.StorageRetryBuildReply {
	return o.Payload
}

func (o *StackRetryBuildOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackRetryBuildBadRequest creates a StackRetryBuildBadRequest with default headers values
func NewStackRetryBuildBadRequest() *StackRetryBuildBadRequest {
	return &StackRetryBuildBadRequest{}
}

/*StackRetryBuildBadRequest handles this case with default header values.

Validation error
*/
type StackRetryBuildBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *StackRetryBuildBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/stacks/{stack_id}/revisions/{sha}/build/retrigger][%d] stackRetryBuildBadRequest  %+v", 400, o.Payload)
}

func (o *StackRetryBuildBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *StackRetryBuildBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackRetryBuildForbidden creates a StackRetryBuildForbidden with default headers values
func NewStackRetryBuildForbidden() *StackRetryBuildForbidden {
	return &StackRetryBuildForbidden{}
}

/*StackRetryBuildForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type StackRetryBuildForbidden struct {
	Payload *models.CommonError
}

func (o *StackRetryBuildForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/stacks/{stack_id}/revisions/{sha}/build/retrigger][%d] stackRetryBuildForbidden  %+v", 403, o.Payload)
}

func (o *StackRetryBuildForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StackRetryBuildForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackRetryBuildNotFound creates a StackRetryBuildNotFound with default headers values
func NewStackRetryBuildNotFound() *StackRetryBuildNotFound {
	return &StackRetryBuildNotFound{}
}

/*StackRetryBuildNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type StackRetryBuildNotFound struct {
	Payload *models.CommonError
}

func (o *StackRetryBuildNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/stacks/{stack_id}/revisions/{sha}/build/retrigger][%d] stackRetryBuildNotFound  %+v", 404, o.Payload)
}

func (o *StackRetryBuildNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StackRetryBuildNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackRetryBuildDefault creates a StackRetryBuildDefault with default headers values
func NewStackRetryBuildDefault(code int) *StackRetryBuildDefault {
	return &StackRetryBuildDefault{
		_statusCode: code,
	}
}

/*StackRetryBuildDefault handles this case with default header values.

An unexpected error response
*/
type StackRetryBuildDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the stack retry build default response
func (o *StackRetryBuildDefault) Code() int {
	return o._statusCode
}

func (o *StackRetryBuildDefault) Error() string {
	return fmt.Sprintf("[POST /v1/stacks/{stack_id}/revisions/{sha}/build/retrigger][%d] stack_RetryBuild default  %+v", o._statusCode, o.Payload)
}

func (o *StackRetryBuildDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *StackRetryBuildDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
