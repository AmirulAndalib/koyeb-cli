// Code generated by go-swagger; DO NOT EDIT.

package stack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// StackGetStackRevisionReader is a Reader for the StackGetStackRevision structure.
type StackGetStackRevisionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StackGetStackRevisionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStackGetStackRevisionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStackGetStackRevisionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStackGetStackRevisionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStackGetStackRevisionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStackGetStackRevisionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStackGetStackRevisionOK creates a StackGetStackRevisionOK with default headers values
func NewStackGetStackRevisionOK() *StackGetStackRevisionOK {
	return &StackGetStackRevisionOK{}
}

/*StackGetStackRevisionOK handles this case with default header values.

A successful response.
*/
type StackGetStackRevisionOK struct {
	Payload *models.StorageGetStackRevisionReply
}

func (o *StackGetStackRevisionOK) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}][%d] stackGetStackRevisionOK  %+v", 200, o.Payload)
}

func (o *StackGetStackRevisionOK) GetPayload() *models.StorageGetStackRevisionReply {
	return o.Payload
}

func (o *StackGetStackRevisionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageGetStackRevisionReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackGetStackRevisionBadRequest creates a StackGetStackRevisionBadRequest with default headers values
func NewStackGetStackRevisionBadRequest() *StackGetStackRevisionBadRequest {
	return &StackGetStackRevisionBadRequest{}
}

/*StackGetStackRevisionBadRequest handles this case with default header values.

Validation error
*/
type StackGetStackRevisionBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *StackGetStackRevisionBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}][%d] stackGetStackRevisionBadRequest  %+v", 400, o.Payload)
}

func (o *StackGetStackRevisionBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *StackGetStackRevisionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackGetStackRevisionForbidden creates a StackGetStackRevisionForbidden with default headers values
func NewStackGetStackRevisionForbidden() *StackGetStackRevisionForbidden {
	return &StackGetStackRevisionForbidden{}
}

/*StackGetStackRevisionForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type StackGetStackRevisionForbidden struct {
	Payload *models.CommonError
}

func (o *StackGetStackRevisionForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}][%d] stackGetStackRevisionForbidden  %+v", 403, o.Payload)
}

func (o *StackGetStackRevisionForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StackGetStackRevisionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackGetStackRevisionNotFound creates a StackGetStackRevisionNotFound with default headers values
func NewStackGetStackRevisionNotFound() *StackGetStackRevisionNotFound {
	return &StackGetStackRevisionNotFound{}
}

/*StackGetStackRevisionNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type StackGetStackRevisionNotFound struct {
	Payload *models.CommonError
}

func (o *StackGetStackRevisionNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}][%d] stackGetStackRevisionNotFound  %+v", 404, o.Payload)
}

func (o *StackGetStackRevisionNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StackGetStackRevisionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackGetStackRevisionDefault creates a StackGetStackRevisionDefault with default headers values
func NewStackGetStackRevisionDefault(code int) *StackGetStackRevisionDefault {
	return &StackGetStackRevisionDefault{
		_statusCode: code,
	}
}

/*StackGetStackRevisionDefault handles this case with default header values.

An unexpected error response
*/
type StackGetStackRevisionDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the stack get stack revision default response
func (o *StackGetStackRevisionDefault) Code() int {
	return o._statusCode
}

func (o *StackGetStackRevisionDefault) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions/{sha}][%d] stack_GetStackRevision default  %+v", o._statusCode, o.Payload)
}

func (o *StackGetStackRevisionDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *StackGetStackRevisionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
