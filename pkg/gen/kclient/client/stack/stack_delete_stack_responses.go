// Code generated by go-swagger; DO NOT EDIT.

package stack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// StackDeleteStackReader is a Reader for the StackDeleteStack structure.
type StackDeleteStackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StackDeleteStackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStackDeleteStackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStackDeleteStackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStackDeleteStackForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStackDeleteStackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStackDeleteStackDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStackDeleteStackOK creates a StackDeleteStackOK with default headers values
func NewStackDeleteStackOK() *StackDeleteStackOK {
	return &StackDeleteStackOK{}
}

/*StackDeleteStackOK handles this case with default header values.

A successful response.
*/
type StackDeleteStackOK struct {
	Payload models.StorageDeleteStackReply
}

func (o *StackDeleteStackOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/stacks/{id}][%d] stackDeleteStackOK  %+v", 200, o.Payload)
}

func (o *StackDeleteStackOK) GetPayload() models.StorageDeleteStackReply {
	return o.Payload
}

func (o *StackDeleteStackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackDeleteStackBadRequest creates a StackDeleteStackBadRequest with default headers values
func NewStackDeleteStackBadRequest() *StackDeleteStackBadRequest {
	return &StackDeleteStackBadRequest{}
}

/*StackDeleteStackBadRequest handles this case with default header values.

Validation error
*/
type StackDeleteStackBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *StackDeleteStackBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/stacks/{id}][%d] stackDeleteStackBadRequest  %+v", 400, o.Payload)
}

func (o *StackDeleteStackBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *StackDeleteStackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackDeleteStackForbidden creates a StackDeleteStackForbidden with default headers values
func NewStackDeleteStackForbidden() *StackDeleteStackForbidden {
	return &StackDeleteStackForbidden{}
}

/*StackDeleteStackForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type StackDeleteStackForbidden struct {
	Payload *models.CommonError
}

func (o *StackDeleteStackForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/stacks/{id}][%d] stackDeleteStackForbidden  %+v", 403, o.Payload)
}

func (o *StackDeleteStackForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StackDeleteStackForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackDeleteStackNotFound creates a StackDeleteStackNotFound with default headers values
func NewStackDeleteStackNotFound() *StackDeleteStackNotFound {
	return &StackDeleteStackNotFound{}
}

/*StackDeleteStackNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type StackDeleteStackNotFound struct {
	Payload *models.CommonError
}

func (o *StackDeleteStackNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/stacks/{id}][%d] stackDeleteStackNotFound  %+v", 404, o.Payload)
}

func (o *StackDeleteStackNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StackDeleteStackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackDeleteStackDefault creates a StackDeleteStackDefault with default headers values
func NewStackDeleteStackDefault(code int) *StackDeleteStackDefault {
	return &StackDeleteStackDefault{
		_statusCode: code,
	}
}

/*StackDeleteStackDefault handles this case with default header values.

An unexpected error response
*/
type StackDeleteStackDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the stack delete stack default response
func (o *StackDeleteStackDefault) Code() int {
	return o._statusCode
}

func (o *StackDeleteStackDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/stacks/{id}][%d] stack_DeleteStack default  %+v", o._statusCode, o.Payload)
}

func (o *StackDeleteStackDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *StackDeleteStackDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
