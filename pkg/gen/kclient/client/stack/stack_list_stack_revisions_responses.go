// Code generated by go-swagger; DO NOT EDIT.

package stack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// StackListStackRevisionsReader is a Reader for the StackListStackRevisions structure.
type StackListStackRevisionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StackListStackRevisionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStackListStackRevisionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStackListStackRevisionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStackListStackRevisionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStackListStackRevisionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewStackListStackRevisionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStackListStackRevisionsOK creates a StackListStackRevisionsOK with default headers values
func NewStackListStackRevisionsOK() *StackListStackRevisionsOK {
	return &StackListStackRevisionsOK{}
}

/*StackListStackRevisionsOK handles this case with default header values.

A successful response.
*/
type StackListStackRevisionsOK struct {
	Payload *models.StorageListStackRevisionsReply
}

func (o *StackListStackRevisionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions][%d] stackListStackRevisionsOK  %+v", 200, o.Payload)
}

func (o *StackListStackRevisionsOK) GetPayload() *models.StorageListStackRevisionsReply {
	return o.Payload
}

func (o *StackListStackRevisionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageListStackRevisionsReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackListStackRevisionsBadRequest creates a StackListStackRevisionsBadRequest with default headers values
func NewStackListStackRevisionsBadRequest() *StackListStackRevisionsBadRequest {
	return &StackListStackRevisionsBadRequest{}
}

/*StackListStackRevisionsBadRequest handles this case with default header values.

Validation error
*/
type StackListStackRevisionsBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *StackListStackRevisionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions][%d] stackListStackRevisionsBadRequest  %+v", 400, o.Payload)
}

func (o *StackListStackRevisionsBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *StackListStackRevisionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackListStackRevisionsForbidden creates a StackListStackRevisionsForbidden with default headers values
func NewStackListStackRevisionsForbidden() *StackListStackRevisionsForbidden {
	return &StackListStackRevisionsForbidden{}
}

/*StackListStackRevisionsForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type StackListStackRevisionsForbidden struct {
	Payload *models.CommonError
}

func (o *StackListStackRevisionsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions][%d] stackListStackRevisionsForbidden  %+v", 403, o.Payload)
}

func (o *StackListStackRevisionsForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StackListStackRevisionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackListStackRevisionsNotFound creates a StackListStackRevisionsNotFound with default headers values
func NewStackListStackRevisionsNotFound() *StackListStackRevisionsNotFound {
	return &StackListStackRevisionsNotFound{}
}

/*StackListStackRevisionsNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type StackListStackRevisionsNotFound struct {
	Payload *models.CommonError
}

func (o *StackListStackRevisionsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions][%d] stackListStackRevisionsNotFound  %+v", 404, o.Payload)
}

func (o *StackListStackRevisionsNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *StackListStackRevisionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackListStackRevisionsDefault creates a StackListStackRevisionsDefault with default headers values
func NewStackListStackRevisionsDefault(code int) *StackListStackRevisionsDefault {
	return &StackListStackRevisionsDefault{
		_statusCode: code,
	}
}

/*StackListStackRevisionsDefault handles this case with default header values.

An unexpected error response
*/
type StackListStackRevisionsDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the stack list stack revisions default response
func (o *StackListStackRevisionsDefault) Code() int {
	return o._statusCode
}

func (o *StackListStackRevisionsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/stacks/{stack_id}/revisions][%d] stack_ListStackRevisions default  %+v", o._statusCode, o.Payload)
}

func (o *StackListStackRevisionsDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *StackListStackRevisionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
