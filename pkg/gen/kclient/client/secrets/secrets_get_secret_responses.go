// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/koyeb/koyeb-cli/pkg/gen/kclient/models"
)

// SecretsGetSecretReader is a Reader for the SecretsGetSecret structure.
type SecretsGetSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecretsGetSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecretsGetSecretOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecretsGetSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSecretsGetSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSecretsGetSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSecretsGetSecretDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSecretsGetSecretOK creates a SecretsGetSecretOK with default headers values
func NewSecretsGetSecretOK() *SecretsGetSecretOK {
	return &SecretsGetSecretOK{}
}

/*SecretsGetSecretOK handles this case with default header values.

A successful response.
*/
type SecretsGetSecretOK struct {
	Payload *models.StorageGetSecretReply
}

func (o *SecretsGetSecretOK) Error() string {
	return fmt.Sprintf("[GET /v1/secrets/{id}][%d] secretsGetSecretOK  %+v", 200, o.Payload)
}

func (o *SecretsGetSecretOK) GetPayload() *models.StorageGetSecretReply {
	return o.Payload
}

func (o *SecretsGetSecretOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageGetSecretReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsGetSecretBadRequest creates a SecretsGetSecretBadRequest with default headers values
func NewSecretsGetSecretBadRequest() *SecretsGetSecretBadRequest {
	return &SecretsGetSecretBadRequest{}
}

/*SecretsGetSecretBadRequest handles this case with default header values.

Validation error
*/
type SecretsGetSecretBadRequest struct {
	Payload *models.CommonErrorWithFields
}

func (o *SecretsGetSecretBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/secrets/{id}][%d] secretsGetSecretBadRequest  %+v", 400, o.Payload)
}

func (o *SecretsGetSecretBadRequest) GetPayload() *models.CommonErrorWithFields {
	return o.Payload
}

func (o *SecretsGetSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorWithFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsGetSecretForbidden creates a SecretsGetSecretForbidden with default headers values
func NewSecretsGetSecretForbidden() *SecretsGetSecretForbidden {
	return &SecretsGetSecretForbidden{}
}

/*SecretsGetSecretForbidden handles this case with default header values.

Returned when the user does not have permission to access the resource.
*/
type SecretsGetSecretForbidden struct {
	Payload *models.CommonError
}

func (o *SecretsGetSecretForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/secrets/{id}][%d] secretsGetSecretForbidden  %+v", 403, o.Payload)
}

func (o *SecretsGetSecretForbidden) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *SecretsGetSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsGetSecretNotFound creates a SecretsGetSecretNotFound with default headers values
func NewSecretsGetSecretNotFound() *SecretsGetSecretNotFound {
	return &SecretsGetSecretNotFound{}
}

/*SecretsGetSecretNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type SecretsGetSecretNotFound struct {
	Payload *models.CommonError
}

func (o *SecretsGetSecretNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/secrets/{id}][%d] secretsGetSecretNotFound  %+v", 404, o.Payload)
}

func (o *SecretsGetSecretNotFound) GetPayload() *models.CommonError {
	return o.Payload
}

func (o *SecretsGetSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsGetSecretDefault creates a SecretsGetSecretDefault with default headers values
func NewSecretsGetSecretDefault(code int) *SecretsGetSecretDefault {
	return &SecretsGetSecretDefault{
		_statusCode: code,
	}
}

/*SecretsGetSecretDefault handles this case with default header values.

An unexpected error response
*/
type SecretsGetSecretDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the secrets get secret default response
func (o *SecretsGetSecretDefault) Code() int {
	return o._statusCode
}

func (o *SecretsGetSecretDefault) Error() string {
	return fmt.Sprintf("[GET /v1/secrets/{id}][%d] Secrets_GetSecret default  %+v", o._statusCode, o.Payload)
}

func (o *SecretsGetSecretDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *SecretsGetSecretDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
